{
    "sourceFile": "src/api/serves.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 45,
            "patches": [
                {
                    "date": 1644687801306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1644687998341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,12 +48,15 @@\n   return /^(2|3)\\d{2}$/.test(status);\r\n } */\r\n axios.interceptors.response.use(\r\n   (response) => {\r\n+    console.log(response,'response');\r\n     return response.data;\r\n   },\r\n   (error) => {\r\n     let { response } = error;\r\n+    console.log(response,'222');\r\n+\r\n     if (response) {\r\n       // 服务器已返回了结果\r\n       switch (response.meta.status) {\r\n         case 401: //当前请求用户需要验证(未登录,没权限)\r\n"
                },
                {
                    "date": 1644688273094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,30 @@\n } */\r\n axios.interceptors.response.use(\r\n   (response) => {\r\n     console.log(response,'response');\r\n+    switch (response.data.meta.status) {\r\n+      case 401: //当前请求用户需要验证(未登录,没权限)\r\n+        alert(\"未授权\");\r\n+        \r\n+        break;\r\n+      case 403: //已经理解请求,但是拒绝(token过期)\r\n+        alert(\"被禁止访问\");\r\n+\r\n+        break;\r\n+      case 404: //找不到页面\r\n+        alert(\"请求的资源不存在\");\r\n+\r\n+        break;\r\n+      case 422: //找不到页面\r\n+        alert(\"[POST/PUT/PATCH] 当创建一个对象时，发生一个验证错误\");\r\n+\r\n+        break;\r\n+      case 500: //内部错误\r\n+        alert(\"内部错误\");\r\n+\r\n+        break;\r\n+    }\r\n     return response.data;\r\n   },\r\n   (error) => {\r\n     let { response } = error;\r\n"
                },
                {
                    "date": 1644688351461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,12 @@\n axios.interceptors.response.use(\r\n   (response) => {\r\n     console.log(response,'response');\r\n     switch (response.data.meta.status) {\r\n+      case 400: //当前请求用户需要验证(未登录,没权限)\r\n+        alert(\"400\");\r\n+        \r\n+        break;\r\n       case 401: //当前请求用户需要验证(未登录,没权限)\r\n         alert(\"未授权\");\r\n         \r\n         break;\r\n"
                },
                {
                    "date": 1644735653387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n //   })\r\n //   .then(response => {})\r\n //   .catch(error => {});\r\n const { default: axios } = require(\"axios\");\r\n+import NProgress from \"nprogress\";\r\n // import qs from \"qs\";\r\n \r\n // axios封装\r\n //node环境变量\r\n@@ -32,8 +33,9 @@\n // 拦截器\r\n // TOKEN校验(JWT):接收服务器返回的token,储存到vuex本地存储中,每次向服务器发送请求,把token携带上\r\n axios.interceptors.request.use(\r\n   (config) => {\r\n+    NProgress.start()\r\n     // 需要授权的 API ，必须在请求头中使用 `Authorization` 字段提供 `token` 令牌\r\n     let token = window.sessionStorage.getItem(\"token\");\r\n     token && (config.headers.Authorization = token);\r\n     return config; //不返回所有请求都不返回\r\n@@ -48,41 +50,41 @@\n   return /^(2|3)\\d{2}$/.test(status);\r\n } */\r\n axios.interceptors.response.use(\r\n   (response) => {\r\n-    console.log(response,'response');\r\n-    switch (response.data.meta.status) {\r\n-      case 400: //当前请求用户需要验证(未登录,没权限)\r\n-        alert(\"400\");\r\n+    NProgress.done()\r\n+\r\n+    // 有结果但是返回的是错误的可以进行配置\r\n+    // switch (response.data.meta.status) {\r\n+    //   case 400: //当前请求用户需要验证(未登录,没权限)\r\n+    //     alert(\"400\");\r\n+    //     break;\r\n+    //   case 401: //当前请求用户需要验证(未登录,没权限)\r\n+    //     alert(\"未授权\");\r\n         \r\n-        break;\r\n-      case 401: //当前请求用户需要验证(未登录,没权限)\r\n-        alert(\"未授权\");\r\n-        \r\n-        break;\r\n-      case 403: //已经理解请求,但是拒绝(token过期)\r\n-        alert(\"被禁止访问\");\r\n+    //     break;\r\n+    //   case 403: //已经理解请求,但是拒绝(token过期)\r\n+    //     alert(\"被禁止访问\");\r\n \r\n-        break;\r\n-      case 404: //找不到页面\r\n-        alert(\"请求的资源不存在\");\r\n+    //     break;\r\n+    //   case 404: //找不到页面\r\n+    //     alert(\"请求的资源不存在\");\r\n \r\n-        break;\r\n-      case 422: //找不到页面\r\n-        alert(\"[POST/PUT/PATCH] 当创建一个对象时，发生一个验证错误\");\r\n+    //     break;\r\n+    //   case 422: //找不到页面\r\n+    //     alert(\"[POST/PUT/PATCH] 当创建一个对象时，发生一个验证错误\");\r\n \r\n-        break;\r\n-      case 500: //内部错误\r\n-        alert(\"内部错误\");\r\n+    //     break;\r\n+    //   case 500: //内部错误\r\n+    //     alert(\"内部错误\");\r\n \r\n-        break;\r\n-    }\r\n+    //     break;\r\n+    // }\r\n     return response.data;\r\n   },\r\n   (error) => {\r\n+    NProgress.done()\r\n     let { response } = error;\r\n-    console.log(response,'222');\r\n-\r\n     if (response) {\r\n       // 服务器已返回了结果\r\n       switch (response.meta.status) {\r\n         case 401: //当前请求用户需要验证(未登录,没权限)\r\n"
                },
                {
                    "date": 1644735706221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,9 @@\n     token && (config.headers.Authorization = token);\r\n     return config; //不返回所有请求都不返回\r\n   },\r\n   (error) => {\r\n+    NProgress.start()\r\n     return Promise.reject(error);\r\n   }\r\n );\r\n // 响应拦截器:服务器返回的信息\r\n"
                },
                {
                    "date": 1644735735785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,8 @@\n     token && (config.headers.Authorization = token);\r\n     return config; //不返回所有请求都不返回\r\n   },\r\n   (error) => {\r\n-    NProgress.start()\r\n     return Promise.reject(error);\r\n   }\r\n );\r\n // 响应拦截器:服务器返回的信息\r\n@@ -82,9 +81,8 @@\n     // }\r\n     return response.data;\r\n   },\r\n   (error) => {\r\n-    NProgress.done()\r\n     let { response } = error;\r\n     if (response) {\r\n       // 服务器已返回了结果\r\n       switch (response.meta.status) {\r\n"
                },
                {
                    "date": 1644735778734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,9 @@\n     token && (config.headers.Authorization = token);\r\n     return config; //不返回所有请求都不返回\r\n   },\r\n   (error) => {\r\n+    NProgress.start()\r\n     return Promise.reject(error);\r\n   }\r\n );\r\n // 响应拦截器:服务器返回的信息\r\n@@ -81,8 +82,9 @@\n     // }\r\n     return response.data;\r\n   },\r\n   (error) => {\r\n+    NProgress.done()\r\n     let { response } = error;\r\n     if (response) {\r\n       // 服务器已返回了结果\r\n       switch (response.meta.status) {\r\n"
                },
                {
                    "date": 1644735895699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,10 @@\n //   .then(response => {})\r\n //   .catch(error => {});\r\n const { default: axios } = require(\"axios\");\r\n import NProgress from \"nprogress\";\r\n+import 'nprogress/nprogress.css'\r\n+\r\n // import qs from \"qs\";\r\n \r\n // axios封装\r\n //node环境变量\r\n"
                },
                {
                    "date": 1644740829248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://127.0.0.1:8888/api/private/v1/api`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n"
                },
                {
                    "date": 1644741097496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n+    axios.defaults.baseURL = `/api`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644741136024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `/api`;\r\n+    axios.defaults.baseURL = `http://127.0.0.1:8888/api/private/v1/api`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644741144054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://127.0.0.1:8888/api/private/v1/api`;\r\n+    axios.defaults.baseURL = `http://127.0.0.1:8888/api/private/v1`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://127.0.0.1:8888/api/private/v1/api`;\r\n+    axios.defaults.baseURL = `http://127.0.0.1:8888/api/private/v1`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644741192192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://127.0.0.1:8888/api/private/v1`;\r\n+    axios.defaults.baseURL = ``;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n"
                },
                {
                    "date": 1644741217041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = ``;\r\n+    axios.defaults.baseURL = `http://127.0.0.1:8080/api`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://127.0.0.1:8888/api/private/v1`;\r\n+    axios.defaults.baseURL = `http://127.0.0.1:8080/api`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644741244339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://127.0.0.1:8080/api`;\r\n+    axios.defaults.baseURL = `http://127.0.0.1:8080`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://127.0.0.1:8080/api`;\r\n+    axios.defaults.baseURL = `http://127.0.0.1:8080`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644741351789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://127.0.0.1:8080`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://127.0.0.1:8080`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644741679693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n+    axios.defaults.baseURL = `http://127.0.0.1:8080/api`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n+    axios.defaults.baseURL = `http://127.0.0.1:8080/api`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644741702361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://127.0.0.1:8080/api`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://127.0.0.1:8080/api`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644741708246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n+    axios.defaults.baseURL = `http://localhost:8080`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n+    axios.defaults.baseURL = `http://localhost:8080`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644741779391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8080`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8080`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644741873327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n+    // axios.defaults.baseURL = `http://localhost:8080/api`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n+    // axios.defaults.baseURL = `http://localhost:8080/api`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644741963986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    // axios.defaults.baseURL = `http://localhost:8080/api`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    // axios.defaults.baseURL = `http://localhost:8080/api`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644742685998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/path`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/path`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644742877719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8080/path`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8080/path`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644743038692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api/private/v1/`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api/private/v1/`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644743100121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8080/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8080/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644743139724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8888/api`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8888/api`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644743460233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8888/api`;\r\n+    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8888/api`;\r\n+    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644743986707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api/private/v1/`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644744177504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8080/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8080/api`;\r\n+    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644744640699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8888`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8888`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644744760490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8888`;\r\n+    axios.defaults.baseURL = `http://localhost:8888/api`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8888`;\r\n+    axios.defaults.baseURL = `http://localhost:8888/api`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644744923528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8888/api`;\r\n+    axios.defaults.baseURL = `http://localhost:8888/proxy`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8888/api`;\r\n+    axios.defaults.baseURL = `http://localhost:8888/proxy`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644745185071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8888/proxy`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/proxy`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8888/proxy`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/proxy`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644745344925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8080/proxy`;\r\n+    // axios.defaults.baseURL = `http://localhost:8080/proxy`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8080/proxy`;\r\n+    // axios.defaults.baseURL = `http://localhost:8080/proxy`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644745398062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    // axios.defaults.baseURL = `http://localhost:8080/proxy`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/hou`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    // axios.defaults.baseURL = `http://localhost:8080/proxy`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/hou`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644745648672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8080/hou`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/hou/api/private/v1/`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8080/hou`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/hou/api/private/v1/`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644745841435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8080/hou/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api/private/v1/`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8080/hou/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api/private/v1/`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644745938647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8080/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8080/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644746078239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api/api/private/v1/`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api/api/private/v1/`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644746093231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,15 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8080/api/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8080/api/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api/private/v1/`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644746113034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8888/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/api/private/v1/`;\r\n     break;\r\n   // case \"test\":\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n"
                },
                {
                    "date": 1644746167064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n   case \"production\":\r\n     axios.defaults.baseURL = `http://localhost:8080/api/private/v1/`;\r\n     break;\r\n   // case \"test\":\r\n+  \r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n     axios.defaults.baseURL = `http://localhost:8080/api/private/v1/`;\r\n"
                },
                {
                    "date": 1644746226822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,16 +16,16 @@\n // axios封装\r\n //node环境变量\r\n switch (process.env.NODE_ENV) {\r\n   case \"production\":\r\n-    axios.defaults.baseURL = `http://localhost:8080/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/hou/api/private/v1/`;\r\n     break;\r\n   // case \"test\":\r\n-  \r\n+\r\n   //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n   //   break;\r\n   default:\r\n-    axios.defaults.baseURL = `http://localhost:8080/api/private/v1/`;\r\n+    axios.defaults.baseURL = `http://localhost:8080/hou/api/private/v1/`;\r\n }\r\n // 设置超时时间和跨域时候运行携带凭证\r\n axios.defaults.timeout = 10000;\r\n axios.defaults.withXCredentials = true;\r\n"
                },
                {
                    "date": 1644748499755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,8 @@\n //   .then(response => {})\r\n //   .catch(error => {});\r\n const { default: axios } = require(\"axios\");\r\n import NProgress from \"nprogress\";\r\n-import 'nprogress/nprogress.css'\r\n \r\n // import qs from \"qs\";\r\n \r\n // axios封装\r\n"
                }
            ],
            "date": 1644687801306,
            "name": "Commit-0",
            "content": "// 新建文件夹http.js或者是serves.js\r\n//基于axios进行二次封装\r\n// import axios from \"axios\";\r\n// axios\r\n//   .get(url, {\r\n//     params: {}\r\n//   })\r\n//   .then(response => {})\r\n//   .catch(error => {});\r\nconst { default: axios } = require(\"axios\");\r\n// import qs from \"qs\";\r\n\r\n// axios封装\r\n//node环境变量\r\nswitch (process.env.NODE_ENV) {\r\n  case \"production\":\r\n    axios.defaults.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n    break;\r\n  // case \"test\":\r\n  //   AuthenticatorAssertionResponse.default.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n  //   break;\r\n  default:\r\n    axios.defaults.baseURL = `http://127.0.0.1:8888/api/private/v1/`;\r\n}\r\n// 设置超时时间和跨域时候运行携带凭证\r\naxios.defaults.timeout = 10000;\r\naxios.defaults.withXCredentials = true;\r\n\r\n// x-xxx-form-urlencoded 设置请求传递的数据格式\r\n// axios.defaults.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\r\n// axios.defaults.transformRequest = (data) => qs.stringify(data);\r\n// 拦截器\r\n// TOKEN校验(JWT):接收服务器返回的token,储存到vuex本地存储中,每次向服务器发送请求,把token携带上\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    // 需要授权的 API ，必须在请求头中使用 `Authorization` 字段提供 `token` 令牌\r\n    let token = window.sessionStorage.getItem(\"token\");\r\n    token && (config.headers.Authorization = token);\r\n    return config; //不返回所有请求都不返回\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n// 响应拦截器:服务器返回的信息\r\n/* axios.defaults.validateStatus = status=>{\r\n  // 自定义响应状态码\r\n  return /^(2|3)\\d{2}$/.test(status);\r\n} */\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    let { response } = error;\r\n    if (response) {\r\n      // 服务器已返回了结果\r\n      switch (response.meta.status) {\r\n        case 401: //当前请求用户需要验证(未登录,没权限)\r\n          alert(\"未授权\");\r\n          \r\n          break;\r\n        case 403: //已经理解请求,但是拒绝(token过期)\r\n          alert(\"被禁止访问\");\r\n\r\n          break;\r\n        case 404: //找不到页面\r\n          alert(\"请求的资源不存在\");\r\n\r\n          break;\r\n        case 422: //找不到页面\r\n          alert(\"[POST/PUT/PATCH] 当创建一个对象时，发生一个验证错误\");\r\n\r\n          break;\r\n        case 500: //内部错误\r\n          alert(\"内部错误\");\r\n\r\n          break;\r\n      }\r\n    } else {\r\n      // else服务器都没有结果,没网或者服务器崩溃\r\n      if (!window.navigator.onLine) {\r\n        // 断网处理:可以跳转到断网页面\r\n        alert(\"断网啦!\");\r\n        return;\r\n      }\r\n      return Promise.reject(error, \"服务器错误\");\r\n    }\r\n  }\r\n);\r\n\r\nexport default axios;\r\n"
        }
    ]
}