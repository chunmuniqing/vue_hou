{
    "sourceFile": "vue.config.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 145,
            "patches": [
                {
                    "date": 1644738327948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1644738407070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,176 @@\n-module.exports ={\n-  \n+// vue.config.js配置\n+\n+const path = require('path')\n+\n+// gzip压缩插件\n+const CompressionWebpackPlugin = require('compression-webpack-plugin')\n+\n+// 代码打包之后取出console.log压缩代码\n+const TerserPlugin = require('terser-webpack-plugin')\n+\n+// 图形化打包详情\n+const BundleAnalyzer = require('webpack-bundle-analyzer').BundleAnalyzerPlugin\n+\n+const cdn = {\n+  // 忽略打包的第三方库\n+  externals: {\n+    vue: 'Vue',\n+    vuex: 'Vuex',\n+    'vue-router': 'VueRouter',\n+    axios: 'axios'\n+  },\n+  // 通过cdn方式使用\n+  js: [\n+    'https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js',\n+    'https://cdn.bootcss.com/vue-router/3.1.2/vue-router.min.js',\n+    'https://cdn.bootcss.com/vuex/3.1.2/vuex.min.js',\n+    'https://cdn.bootcss.com/axios/0.19.2/axios.min.js',\n+    'https://cdn.bootcss.com/moment.js/2.24.0/moment.min.js',\n+    'https://cdn.bootcss.com/echarts/3.7.1/echarts.min.js'\n+  ],\n+  css: []\n+}\n+\n+function resolve (dir) {\n+  return path.join(__dirname, dir)\n+}\n+\n+module.exports = {\n+  // 是否触发eslint检查\n+  lintOnSave: false,\n+  publicPath: '/',\n+  // 打包文件的出口\n+  outputDir: 'dist',\n+  // 放置生成的css和js和img和fonts的目录\n+  assetsDir: 'static',\n+  // 存放index.html模板的路径\n+  indexPath: 'static/index.html',\n+  productionSourceMap: false,\n+  chainWebpack: config => {\n+    // 配置cdn引入\n+    config.plugin('html').tap(args => {\n+      args[0].cdn = cdn\n+      return args\n+    })\n+\n+    // 移除prefetch插件，避免加载多余的资源\n+    config.plugins.delete('prefetch')\n+\n+    // 定义文件夹的路径\n+    config.resolve.alias\n+      .set('@', resolve('src'))\n+      .set('assets', resolve('src/assets'))\n+      .set('components', resolve('src/components'))\n+      .set('router', resolve('src/router'))\n+      .set('store', resolve('src/store'))\n+      .set('views', resolve('src/views'))\n+\n+    // 压缩图片\n+    const imagesRule = config.module.rule('images')\n+    imagesRule.uses.clear()\n+    imagesRule.use('file-loader')\n+      .loader('url-loader')\n+      .options({\n+        limit: 10240,\n+        fallback: {\n+          loader: 'file-loader',\n+          options: {\n+            outputPath: 'static/images'\n+          }\n+        }\n+      })\n+\n+    // 压缩响应的app.json返回的代码压缩\n+    config.optimization.minimize(true)\n+  },\n+  // webpack的配置\n+  configureWebpack: config => {\n+    // 忽略打包配置\n+    config.externals = cdn.externals\n+    // 生产环境配置\n+    if (process.env.NODE_ENV === 'production') {\n+      // 代码压缩去除console.log\n+      config.plugins.push(\n+        new TerserPlugin({\n+          terserOptions: {\n+            ecma: undefined,\n+            warnings: false,\n+            parse: {},\n+            compress: {\n+              drop_console: true,\n+              drop_debugger: false,\n+              pure_funcs: ['console.log'] // 移除console\n+            }\n+          }\n+        })\n+      )\n+    }\n+\n+    // 开启gzip压缩\n+    config.plugins.push(\n+      new CompressionWebpackPlugin(\n+        {\n+          filename: info => {\n+            return `${info.path}.gz${info.query}`\n+          },\n+          algorithm: 'gzip',\n+          threshold: 10240, // 只有大小大于该值的资源会被处理 10240\n+          test: new RegExp('\\\\.(' + ['js'].join('|') + ')$'\n+          ),\n+          minRatio: 0.8, // 只有压缩率小于这个值的资源才会被处理\n+          deleteOriginalAssets: false // 删除原文件\n+        }\n+      )\n+    )\n+\n+    // 展示打包图形化信息\n+    config.plugins.push(\n+      new BundleAnalyzer()\n+    )\n+\n+    // 公共代码抽离\n+    config.optimization = {\n+      splitChunks: {\n+        cacheGroups: {\n+          vendor: {\n+            chunks: 'all',\n+            test: /node_modules/,\n+            name: 'vendor',\n+            minChunks: 1,\n+            maxInitialRequests: 5,\n+            minSize: 0,\n+            priority: 100\n+          }\n+        }\n+      }\n+    }\n+  },\n+  css: {\n+    extract: true,\n+    sourceMap: false,\n+    loaderOptions: {\n+      // 定义全局scss无需引入即可使用\n+      sass: {\n+        prependData: `\n+          @import \"@/assets/css/variable.scss\";\n+          @import \"@/assets/css/common.scss\";\n+          @import \"@/assets/css/mixin.scss\";\n+        `\n+      }\n+    }\n+  },\n+  // 需要gzip压缩的文件\n+  devServer: {\n+    host: 'localhost',\n+    port: 8080, // 端口号\n+    open: false, // 配置自动启动浏览器\n+    before (app, server) {\n+      app.get(/.*.(js)$/, (req, res, next) => {\n+        req.url = req.url + '.gz'\n+        res.set('Content-Encoding', 'gzip')\n+        next()\n+      })\n+    }\n+  }\n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1644739078796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,15 @@\n   // 存放index.html模板的路径\n   indexPath: 'static/index.html',\n   productionSourceMap: false,\n   chainWebpack: config => {\n+    // 自定义打包入口\n+    config.when(process.env.NODE_ENV === 'production',config=>{\n+      config.entry('app').clear().add('./src/main_prod.js')\n+    })\n+    config.when(process.env.NODE_ENV === 'development',config=>{\n+      config.entry('app').clear().add('./src/main_dev.js')\n+    })\n     // 配置cdn引入\n     config.plugin('html').tap(args => {\n       args[0].cdn = cdn\n       return args\n"
                },
                {
                    "date": 1644739396927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+\n // vue.config.js配置\n \n const path = require('path')\n \n"
                },
                {
                    "date": 1644739404289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,8 @@\n+/* \n+出现问题:\n \n+*/\n // vue.config.js配置\n \n const path = require('path')\n \n"
                },
                {
                    "date": 1644739410930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n /* \n 出现问题:\n-\n+npm i compression-webpack-plugin@5.0.1\n */\n // vue.config.js配置\n \n-const path = require('path')\n+const path = require('path')//不用下载\n \n // gzip压缩插件\n const CompressionWebpackPlugin = require('compression-webpack-plugin')\n \n"
                },
                {
                    "date": 1644739420346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n /* \n 出现问题:\n+TypeError: Cannot read property ‘tapPromise‘ of undefined\n npm i compression-webpack-plugin@5.0.1\n */\n // vue.config.js配置\n \n"
                },
                {
                    "date": 1644739434234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n /* \n 出现问题:\n TypeError: Cannot read property ‘tapPromise‘ of undefined\n+// 打包压缩\n npm i compression-webpack-plugin@5.0.1\n */\n // vue.config.js配置\n \n"
                },
                {
                    "date": 1644739451446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,20 @@\n /* \n 出现问题:\n TypeError: Cannot read property ‘tapPromise‘ of undefined\n-// 打包压缩\n-npm i compression-webpack-plugin@5.0.1\n+// 打包压缩版本问题\n+使用vue cli  4 webpack进行打包时出现了  ERROR TypeError:Cannot read property ‘tapPromise‘ of undefined问题,  以为配置有问题但是最后发现是是compression-webpack-plugin版本问题，\n+\n+compression-webpack-plugin 默认安装的是 7 版本的\n+\n+ \n+\n+先执行卸载命令->npm uninstall compression-webpack-plugin\n+\n+执行安装命令->npm i compression-webpack-plugin@5.0.1\n+————————————————\n+版权声明：本文为CSDN博主「年少不知春衫薄」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n+原文链接：https://blog.csdn.net/weixin_38401146/article/details/115308825\n */\n // vue.config.js配置\n \n const path = require('path')//不用下载\n"
                },
                {
                    "date": 1644739456648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,12 +9,9 @@\n  \n \n 先执行卸载命令->npm uninstall compression-webpack-plugin\n \n-执行安装命令->npm i compression-webpack-plugin@5.0.1\n-————————————————\n-版权声明：本文为CSDN博主「年少不知春衫薄」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n-原文链接：https://blog.csdn.net/weixin_38401146/article/details/115308825\n+执行安装命令->npm i compression-webpack-plugin@5.0.1 -D\n */\n // vue.config.js配置\n \n const path = require('path')//不用下载\n"
                },
                {
                    "date": 1644739799943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n /* \n 出现问题:\n-TypeError: Cannot read property ‘tapPromise‘ of undefined\n+1.TypeError: Cannot read property ‘tapPromise‘ of undefined\n // 打包压缩版本问题\n 使用vue cli  4 webpack进行打包时出现了  ERROR TypeError:Cannot read property ‘tapPromise‘ of undefined问题,  以为配置有问题但是最后发现是是compression-webpack-plugin版本问题，\n \n compression-webpack-plugin 默认安装的是 7 版本的\n"
                },
                {
                    "date": 1644739805666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,11 +4,8 @@\n // 打包压缩版本问题\n 使用vue cli  4 webpack进行打包时出现了  ERROR TypeError:Cannot read property ‘tapPromise‘ of undefined问题,  以为配置有问题但是最后发现是是compression-webpack-plugin版本问题，\n \n compression-webpack-plugin 默认安装的是 7 版本的\n-\n- \n-\n 先执行卸载命令->npm uninstall compression-webpack-plugin\n \n 执行安装命令->npm i compression-webpack-plugin@5.0.1 -D\n */\n"
                },
                {
                    "date": 1644739814657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,13 +2,12 @@\n 出现问题:\n 1.TypeError: Cannot read property ‘tapPromise‘ of undefined\n // 打包压缩版本问题\n 使用vue cli  4 webpack进行打包时出现了  ERROR TypeError:Cannot read property ‘tapPromise‘ of undefined问题,  以为配置有问题但是最后发现是是compression-webpack-plugin版本问题，\n-\n compression-webpack-plugin 默认安装的是 7 版本的\n 先执行卸载命令->npm uninstall compression-webpack-plugin\n-\n 执行安装命令->npm i compression-webpack-plugin@5.0.1 -D\n+2\n */\n // vue.config.js配置\n \n const path = require('path')//不用下载\n"
                },
                {
                    "date": 1644739820151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,11 @@\n 使用vue cli  4 webpack进行打包时出现了  ERROR TypeError:Cannot read property ‘tapPromise‘ of undefined问题,  以为配置有问题但是最后发现是是compression-webpack-plugin版本问题，\n compression-webpack-plugin 默认安装的是 7 版本的\n 先执行卸载命令->npm uninstall compression-webpack-plugin\n 执行安装命令->npm i compression-webpack-plugin@5.0.1 -D\n-2\n+2.原因：webpack4中用到terser-webpack-plugin压缩插件，不能使用最新的版本，而是terser-webpack-plugin@4.x版本；webpack5对应的使用terser-webpack-plugin@5.x版本\n+\n+解决办法：将package.json中terser-webpack-plugin的版本换成4.2.3，然后再num install一下安装对应的版本依赖就好使了。\n */\n // vue.config.js配置\n \n const path = require('path')//不用下载\n"
                },
                {
                    "date": 1644740716615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,8 @@\n compression-webpack-plugin 默认安装的是 7 版本的\n 先执行卸载命令->npm uninstall compression-webpack-plugin\n 执行安装命令->npm i compression-webpack-plugin@5.0.1 -D\n 2.原因：webpack4中用到terser-webpack-plugin压缩插件，不能使用最新的版本，而是terser-webpack-plugin@4.x版本；webpack5对应的使用terser-webpack-plugin@5.x版本\n-\n 解决办法：将package.json中terser-webpack-plugin的版本换成4.2.3，然后再num install一下安装对应的版本依赖就好使了。\n */\n // vue.config.js配置\n \n@@ -189,7 +188,8 @@\n         res.set('Content-Encoding', 'gzip')\n         next()\n       })\n     }\n-  }\n+  },\n+  \n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1644740727443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,7 +189,13 @@\n         next()\n       })\n     }\n   },\n-  \n+  proxy: {\n+    '/build': {\n+      target: 'https://baidu.com/bus/graph',\n+      logLevel:'debug',//运行时将本地发起的地址和对应指向的地址打印输出\n+      changeOrigin: true,//允许跨域\n+    }\n+  },\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1644740743598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,9 +191,9 @@\n     }\n   },\n   proxy: {\n     '/build': {\n-      target: 'https://baidu.com/bus/graph',\n+      target: '`http://127.0.0.1:8888/api/private/v1/`',\n       logLevel:'debug',//运行时将本地发起的地址和对应指向的地址打印输出\n       changeOrigin: true,//允许跨域\n     }\n   },\n"
                },
                {
                    "date": 1644740748922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,9 +191,9 @@\n     }\n   },\n   proxy: {\n     '/build': {\n-      target: '`http://127.0.0.1:8888/api/private/v1/`',\n+      target: `http://127.0.0.1:8888/api/private/v1/`,\n       logLevel:'debug',//运行时将本地发起的地址和对应指向的地址打印输出\n       changeOrigin: true,//允许跨域\n     }\n   },\n"
                },
                {
                    "date": 1644740761206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,9 +190,9 @@\n       })\n     }\n   },\n   proxy: {\n-    '/build': {\n+    '/': {\n       target: `http://127.0.0.1:8888/api/private/v1/`,\n       logLevel:'debug',//运行时将本地发起的地址和对应指向的地址打印输出\n       changeOrigin: true,//允许跨域\n     }\n"
                },
                {
                    "date": 1644740774357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,9 +190,9 @@\n       })\n     }\n   },\n   proxy: {\n-    '/': {\n+    '/api': {\n       target: `http://127.0.0.1:8888/api/private/v1/`,\n       logLevel:'debug',//运行时将本地发起的地址和对应指向的地址打印输出\n       changeOrigin: true,//允许跨域\n     }\n"
                },
                {
                    "date": 1644740781012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,10 +192,10 @@\n   },\n   proxy: {\n     '/api': {\n       target: `http://127.0.0.1:8888/api/private/v1/`,\n-      logLevel:'debug',//运行时将本地发起的地址和对应指向的地址打印输出\n       changeOrigin: true,//允许跨域\n+      \n     }\n   },\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1644740791879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,10 +192,10 @@\n   },\n   proxy: {\n     '/api': {\n       target: `http://127.0.0.1:8888/api/private/v1/`,\n+      logLevel:'debug',//运行时将本地发起的地址和对应指向的地址打印输出\n       changeOrigin: true,//允许跨域\n-      \n     }\n   },\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1644740797844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,8 +194,9 @@\n     '/api': {\n       target: `http://127.0.0.1:8888/api/private/v1/`,\n       logLevel:'debug',//运行时将本地发起的地址和对应指向的地址打印输出\n       changeOrigin: true,//允许跨域\n+      pathR\n     }\n   },\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1644740804807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,11 @@\n     '/api': {\n       target: `http://127.0.0.1:8888/api/private/v1/`,\n       logLevel:'debug',//运行时将本地发起的地址和对应指向的地址打印输出\n       changeOrigin: true,//允许跨域\n-      pathR\n+      pathRewrite:{\n+        ''\n+      }\n     }\n   },\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1644740811136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,9 +195,9 @@\n       target: `http://127.0.0.1:8888/api/private/v1/`,\n       logLevel:'debug',//运行时将本地发起的地址和对应指向的地址打印输出\n       changeOrigin: true,//允许跨域\n       pathRewrite:{\n-        ''\n+        '^/api'\n       }\n     }\n   },\n \n"
                },
                {
                    "date": 1644740907456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,104 +10,105 @@\n 解决办法：将package.json中terser-webpack-plugin的版本换成4.2.3，然后再num install一下安装对应的版本依赖就好使了。\n */\n // vue.config.js配置\n \n-const path = require('path')//不用下载\n+const path = require(\"path\"); //不用下载\n \n // gzip压缩插件\n-const CompressionWebpackPlugin = require('compression-webpack-plugin')\n+const CompressionWebpackPlugin = require(\"compression-webpack-plugin\");\n \n // 代码打包之后取出console.log压缩代码\n-const TerserPlugin = require('terser-webpack-plugin')\n+const TerserPlugin = require(\"terser-webpack-plugin\");\n \n // 图形化打包详情\n-const BundleAnalyzer = require('webpack-bundle-analyzer').BundleAnalyzerPlugin\n+const BundleAnalyzer = require(\"webpack-bundle-analyzer\").BundleAnalyzerPlugin;\n \n const cdn = {\n   // 忽略打包的第三方库\n   externals: {\n-    vue: 'Vue',\n-    vuex: 'Vuex',\n-    'vue-router': 'VueRouter',\n-    axios: 'axios'\n+    vue: \"Vue\",\n+    vuex: \"Vuex\",\n+    \"vue-router\": \"VueRouter\",\n+    axios: \"axios\",\n   },\n   // 通过cdn方式使用\n   js: [\n-    'https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js',\n-    'https://cdn.bootcss.com/vue-router/3.1.2/vue-router.min.js',\n-    'https://cdn.bootcss.com/vuex/3.1.2/vuex.min.js',\n-    'https://cdn.bootcss.com/axios/0.19.2/axios.min.js',\n-    'https://cdn.bootcss.com/moment.js/2.24.0/moment.min.js',\n-    'https://cdn.bootcss.com/echarts/3.7.1/echarts.min.js'\n+    \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n+    \"https://cdn.bootcss.com/vue-router/3.1.2/vue-router.min.js\",\n+    \"https://cdn.bootcss.com/vuex/3.1.2/vuex.min.js\",\n+    \"https://cdn.bootcss.com/axios/0.19.2/axios.min.js\",\n+    \"https://cdn.bootcss.com/moment.js/2.24.0/moment.min.js\",\n+    \"https://cdn.bootcss.com/echarts/3.7.1/echarts.min.js\",\n   ],\n-  css: []\n-}\n+  css: [],\n+};\n \n-function resolve (dir) {\n-  return path.join(__dirname, dir)\n+function resolve(dir) {\n+  return path.join(__dirname, dir);\n }\n \n module.exports = {\n   // 是否触发eslint检查\n   lintOnSave: false,\n-  publicPath: '/',\n+  publicPath: \"/\",\n   // 打包文件的出口\n-  outputDir: 'dist',\n+  outputDir: \"dist\",\n   // 放置生成的css和js和img和fonts的目录\n-  assetsDir: 'static',\n+  assetsDir: \"static\",\n   // 存放index.html模板的路径\n-  indexPath: 'static/index.html',\n+  indexPath: \"static/index.html\",\n   productionSourceMap: false,\n-  chainWebpack: config => {\n+  chainWebpack: (config) => {\n     // 自定义打包入口\n-    config.when(process.env.NODE_ENV === 'production',config=>{\n-      config.entry('app').clear().add('./src/main_prod.js')\n-    })\n-    config.when(process.env.NODE_ENV === 'development',config=>{\n-      config.entry('app').clear().add('./src/main_dev.js')\n-    })\n+    config.when(process.env.NODE_ENV === \"production\", (config) => {\n+      config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n+    });\n+    config.when(process.env.NODE_ENV === \"development\", (config) => {\n+      config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n+    });\n     // 配置cdn引入\n-    config.plugin('html').tap(args => {\n-      args[0].cdn = cdn\n-      return args\n-    })\n+    config.plugin(\"html\").tap((args) => {\n+      args[0].cdn = cdn;\n+      return args;\n+    });\n \n     // 移除prefetch插件，避免加载多余的资源\n-    config.plugins.delete('prefetch')\n+    config.plugins.delete(\"prefetch\");\n \n     // 定义文件夹的路径\n     config.resolve.alias\n-      .set('@', resolve('src'))\n-      .set('assets', resolve('src/assets'))\n-      .set('components', resolve('src/components'))\n-      .set('router', resolve('src/router'))\n-      .set('store', resolve('src/store'))\n-      .set('views', resolve('src/views'))\n+      .set(\"@\", resolve(\"src\"))\n+      .set(\"assets\", resolve(\"src/assets\"))\n+      .set(\"components\", resolve(\"src/components\"))\n+      .set(\"router\", resolve(\"src/router\"))\n+      .set(\"store\", resolve(\"src/store\"))\n+      .set(\"views\", resolve(\"src/views\"));\n \n     // 压缩图片\n-    const imagesRule = config.module.rule('images')\n-    imagesRule.uses.clear()\n-    imagesRule.use('file-loader')\n-      .loader('url-loader')\n+    const imagesRule = config.module.rule(\"images\");\n+    imagesRule.uses.clear();\n+    imagesRule\n+      .use(\"file-loader\")\n+      .loader(\"url-loader\")\n       .options({\n         limit: 10240,\n         fallback: {\n-          loader: 'file-loader',\n+          loader: \"file-loader\",\n           options: {\n-            outputPath: 'static/images'\n-          }\n-        }\n-      })\n+            outputPath: \"static/images\",\n+          },\n+        },\n+      });\n \n     // 压缩响应的app.json返回的代码压缩\n-    config.optimization.minimize(true)\n+    config.optimization.minimize(true);\n   },\n   // webpack的配置\n-  configureWebpack: config => {\n+  configureWebpack: (config) => {\n     // 忽略打包配置\n-    config.externals = cdn.externals\n+    config.externals = cdn.externals;\n     // 生产环境配置\n-    if (process.env.NODE_ENV === 'production') {\n+    if (process.env.NODE_ENV === \"production\") {\n       // 代码压缩去除console.log\n       config.plugins.push(\n         new TerserPlugin({\n           terserOptions: {\n@@ -116,53 +117,48 @@\n             parse: {},\n             compress: {\n               drop_console: true,\n               drop_debugger: false,\n-              pure_funcs: ['console.log'] // 移除console\n-            }\n-          }\n+              pure_funcs: [\"console.log\"], // 移除console\n+            },\n+          },\n         })\n-      )\n+      );\n     }\n \n     // 开启gzip压缩\n     config.plugins.push(\n-      new CompressionWebpackPlugin(\n-        {\n-          filename: info => {\n-            return `${info.path}.gz${info.query}`\n-          },\n-          algorithm: 'gzip',\n-          threshold: 10240, // 只有大小大于该值的资源会被处理 10240\n-          test: new RegExp('\\\\.(' + ['js'].join('|') + ')$'\n-          ),\n-          minRatio: 0.8, // 只有压缩率小于这个值的资源才会被处理\n-          deleteOriginalAssets: false // 删除原文件\n-        }\n-      )\n-    )\n+      new CompressionWebpackPlugin({\n+        filename: (info) => {\n+          return `${info.path}.gz${info.query}`;\n+        },\n+        algorithm: \"gzip\",\n+        threshold: 10240, // 只有大小大于该值的资源会被处理 10240\n+        test: new RegExp(\"\\\\.(\" + [\"js\"].join(\"|\") + \")$\"),\n+        minRatio: 0.8, // 只有压缩率小于这个值的资源才会被处理\n+        deleteOriginalAssets: false, // 删除原文件\n+      })\n+    );\n \n     // 展示打包图形化信息\n-    config.plugins.push(\n-      new BundleAnalyzer()\n-    )\n+    config.plugins.push(new BundleAnalyzer());\n \n     // 公共代码抽离\n     config.optimization = {\n       splitChunks: {\n         cacheGroups: {\n           vendor: {\n-            chunks: 'all',\n+            chunks: \"all\",\n             test: /node_modules/,\n-            name: 'vendor',\n+            name: \"vendor\",\n             minChunks: 1,\n             maxInitialRequests: 5,\n             minSize: 0,\n-            priority: 100\n-          }\n-        }\n-      }\n-    }\n+            priority: 100,\n+          },\n+        },\n+      },\n+    };\n   },\n   css: {\n     extract: true,\n     sourceMap: false,\n@@ -172,33 +168,23 @@\n         prependData: `\n           @import \"@/assets/css/variable.scss\";\n           @import \"@/assets/css/common.scss\";\n           @import \"@/assets/css/mixin.scss\";\n-        `\n-      }\n-    }\n+        `,\n+      },\n+    },\n   },\n   // 需要gzip压缩的文件\n   devServer: {\n-    host: 'localhost',\n+    host: \"localhost\",\n     port: 8080, // 端口号\n     open: false, // 配置自动启动浏览器\n-    before (app, server) {\n+    before(app, server) {\n       app.get(/.*.(js)$/, (req, res, next) => {\n-        req.url = req.url + '.gz'\n-        res.set('Content-Encoding', 'gzip')\n-        next()\n-      })\n-    }\n+        req.url = req.url + \".gz\";\n+        res.set(\"Content-Encoding\", \"gzip\");\n+        next();\n+      });\n+    },\n   },\n-  proxy: {\n-    '/api': {\n\\ No newline at end of file\n-      target: `http://127.0.0.1:8888/api/private/v1/`,\n-      logLevel:'debug',//运行时将本地发起的地址和对应指向的地址打印输出\n-      changeOrigin: true,//允许跨域\n-      pathRewrite:{\n-        '^/api'\n-      }\n-    }\n-  },\n-\n-}\n+  \n+};\n"
                },
                {
                    "date": 1644740919691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,7 +184,17 @@\n         res.set(\"Content-Encoding\", \"gzip\");\n         next();\n       });\n     },\n+    proxy: {\n+      \"/api\": {\n+        target: `http://127.0.0.1:8888/api/private/v1/`,\n+        logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n+        changeOrigin: true, //允许跨域\n+        pathRewrite: {\n+          \"^/api\": \"\",\n+        },\n+      },\n+    },\n   },\n   \n };\n"
                },
                {
                    "date": 1644740957495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,8 +188,9 @@\n     proxy: {\n       \"/api\": {\n         target: `http://127.0.0.1:8888/api/private/v1/`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n+        \n         changeOrigin: true, //允许跨域\n         pathRewrite: {\n           \"^/api\": \"\",\n         },\n"
                },
                {
                    "date": 1644740974677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,14 +188,14 @@\n     proxy: {\n       \"/api\": {\n         target: `http://127.0.0.1:8888/api/private/v1/`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n-        \n+        ws: true, //如果要代理 websockets，配置这个参数\n+        secure: false, // 如果是https接口，需要配置这个参数\n         changeOrigin: true, //允许跨域\n         pathRewrite: {\n           \"^/api\": \"\",\n         },\n       },\n     },\n   },\n-  \n };\n"
                },
                {
                    "date": 1644741489748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n       });\n     },\n     proxy: {\n       \"/api\": {\n-        target: `http://127.0.0.1:8888/api/private/v1/`,\n+        target: `http://127.0.0.1:8888/api/private/v1`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n         ws: true, //如果要代理 websockets，配置这个参数\n         secure: false, // 如果是https接口，需要配置这个参数\n         changeOrigin: true, //允许跨域\n"
                },
                {
                    "date": 1644741537035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,12 +190,13 @@\n         target: `http://127.0.0.1:8888/api/private/v1`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n         ws: true, //如果要代理 websockets，配置这个参数\n         secure: false, // 如果是https接口，需要配置这个参数\n-        changeOrigin: true, //允许跨域\n         pathRewrite: {\n           \"^/api\": \"\",\n         },\n+        changeOrigin: true, //允许跨域\n+\n       },\n     },\n   },\n };\n"
                },
                {
                    "date": 1644742401880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n       });\n     },\n     proxy: {\n       \"/api\": {\n-        target: `http://127.0.0.1:8888/api/private/v1`,\n+        target: `http://127.0.0.1:3306/api/private/v1`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n         ws: true, //如果要代理 websockets，配置这个参数\n         secure: false, // 如果是https接口，需要配置这个参数\n         pathRewrite: {\n"
                },
                {
                    "date": 1644742553127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n       });\n     },\n     proxy: {\n       \"/api\": {\n-        target: `http://127.0.0.1:3306/api/private/v1`,\n+        target: `http://127.0.0.1:8888/api/private/v1`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n         ws: true, //如果要代理 websockets，配置这个参数\n         secure: false, // 如果是https接口，需要配置这个参数\n         pathRewrite: {\n"
                },
                {
                    "date": 1644742665366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,15 +185,15 @@\n         next();\n       });\n     },\n     proxy: {\n-      \"/api\": {\n+      \"/path\": {\n         target: `http://127.0.0.1:8888/api/private/v1`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n         ws: true, //如果要代理 websockets，配置这个参数\n         secure: false, // 如果是https接口，需要配置这个参数\n         pathRewrite: {\n-          \"^/api\": \"\",\n+          \"^/path\": \"\",\n         },\n         changeOrigin: true, //允许跨域\n \n       },\n"
                },
                {
                    "date": 1644742869025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,15 +185,15 @@\n         next();\n       });\n     },\n     proxy: {\n-      \"/path\": {\n+      \"/api\": {\n         target: `http://127.0.0.1:8888/api/private/v1`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n         ws: true, //如果要代理 websockets，配置这个参数\n         secure: false, // 如果是https接口，需要配置这个参数\n         pathRewrite: {\n-          \"^/path\": \"\",\n+          \"^/api\": \"\",\n         },\n         changeOrigin: true, //允许跨域\n \n       },\n"
                },
                {
                    "date": 1644743200675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n       });\n     },\n     proxy: {\n       \"/api\": {\n-        target: `http://127.0.0.1:8888/api/private/v1`,\n+        target: `http://127.0.0.1:8888`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n         ws: true, //如果要代理 websockets，配置这个参数\n         secure: false, // 如果是https接口，需要配置这个参数\n         pathRewrite: {\n"
                },
                {
                    "date": 1644743319344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n       });\n     },\n     proxy: {\n       \"/api\": {\n-        target: `http://127.0.0.1:8888`,\n+        target: `http://127.0.0.1:8888/api`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n         ws: true, //如果要代理 websockets，配置这个参数\n         secure: false, // 如果是https接口，需要配置这个参数\n         pathRewrite: {\n"
                },
                {
                    "date": 1644743797006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n       });\n     },\n     proxy: {\n       \"/api\": {\n-        target: `http://127.0.0.1:8888/api`,\n+        target: `http://127.0.0.1:8888/api/private/v1/`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n         ws: true, //如果要代理 websockets，配置这个参数\n         secure: false, // 如果是https接口，需要配置这个参数\n         pathRewrite: {\n"
                },
                {
                    "date": 1644744232498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n       })\n     );\n \n     // 展示打包图形化信息\n-    config.plugins.push(new BundleAnalyzer());\n+    // config.plugins.push(new BundleAnalyzer());\n \n     // 公共代码抽离\n     config.optimization = {\n       splitChunks: {\n"
                },
                {
                    "date": 1644744570772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n       });\n     },\n     proxy: {\n       \"/api\": {\n-        target: `http://127.0.0.1:8888/api/private/v1/`,\n+        target: `http://127.0.0.1:8888/private/v1/`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n         ws: true, //如果要代理 websockets，配置这个参数\n         secure: false, // 如果是https接口，需要配置这个参数\n         pathRewrite: {\n"
                },
                {
                    "date": 1644744800977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n       });\n     },\n     proxy: {\n       \"/api\": {\n-        target: `http://127.0.0.1:8888/private/v1/`,\n+        target: `http://127.0.0.1:8888/api/private/v1/`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n         ws: true, //如果要代理 websockets，配置这个参数\n         secure: false, // 如果是https接口，需要配置这个参数\n         pathRewrite: {\n"
                },
                {
                    "date": 1644744970731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,15 +185,15 @@\n         next();\n       });\n     },\n     proxy: {\n-      \"/api\": {\n+      \"/proxy\": {\n         target: `http://127.0.0.1:8888/api/private/v1/`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n         ws: true, //如果要代理 websockets，配置这个参数\n         secure: false, // 如果是https接口，需要配置这个参数\n         pathRewrite: {\n-          \"^/api\": \"\",\n+          \"^/proxy\": \"\",\n         },\n         changeOrigin: true, //允许跨域\n \n       },\n"
                },
                {
                    "date": 1644745133693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,18 +174,18 @@\n     },\n   },\n   // 需要gzip压缩的文件\n   devServer: {\n-    host: \"localhost\",\n-    port: 8080, // 端口号\n-    open: false, // 配置自动启动浏览器\n-    before(app, server) {\n-      app.get(/.*.(js)$/, (req, res, next) => {\n-        req.url = req.url + \".gz\";\n-        res.set(\"Content-Encoding\", \"gzip\");\n-        next();\n-      });\n-    },\n+    // host: \"localhost\",\n+    // port: 8080, // 端口号\n+    // open: false, // 配置自动启动浏览器\n+    // before(app, server) {\n+    //   app.get(/.*.(js)$/, (req, res, next) => {\n+    //     req.url = req.url + \".gz\";\n+    //     res.set(\"Content-Encoding\", \"gzip\");\n+    //     next();\n+    //   });\n+    // },\n     proxy: {\n       \"/proxy\": {\n         target: `http://127.0.0.1:8888/api/private/v1/`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n"
                },
                {
                    "date": 1644745399691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,15 +185,15 @@\n     //     next();\n     //   });\n     // },\n     proxy: {\n-      \"/proxy\": {\n+      \"/hou\": {\n         target: `http://127.0.0.1:8888/api/private/v1/`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n         ws: true, //如果要代理 websockets，配置这个参数\n         secure: false, // 如果是https接口，需要配置这个参数\n         pathRewrite: {\n-          \"^/proxy\": \"\",\n+          \"^/hou\": \"\",\n         },\n         changeOrigin: true, //允许跨域\n \n       },\n"
                },
                {
                    "date": 1644745624452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n     //   });\n     // },\n     proxy: {\n       \"/hou\": {\n-        target: `http://127.0.0.1:8888/api/private/v1/`,\n+        target: `http://127.0.0.1:8888`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n         ws: true, //如果要代理 websockets，配置这个参数\n         secure: false, // 如果是https接口，需要配置这个参数\n         pathRewrite: {\n"
                },
                {
                    "date": 1644745843490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,16 +185,16 @@\n     //     next();\n     //   });\n     // },\n     proxy: {\n-      \"/hou\": {\n+      \"/api\": {\n         target: `http://127.0.0.1:8888`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n         ws: true, //如果要代理 websockets，配置这个参数\n         secure: false, // 如果是https接口，需要配置这个参数\n-        pathRewrite: {\n-          \"^/hou\": \"\",\n-        },\n+        // pathRewrite: {\n+        //   \"^/hou\": \"\",\n+        // },\n         changeOrigin: true, //允许跨域\n \n       },\n     },\n"
                },
                {
                    "date": 1644746228715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,16 +185,16 @@\n     //     next();\n     //   });\n     // },\n     proxy: {\n-      \"/api\": {\n+      \"/hou\": {\n         target: `http://127.0.0.1:8888`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n         ws: true, //如果要代理 websockets，配置这个参数\n         secure: false, // 如果是https接口，需要配置这个参数\n-        // pathRewrite: {\n-        //   \"^/hou\": \"\",\n-        // },\n+        pathRewrite: {\n+          \"^/hou\": \"\",\n+        },\n         changeOrigin: true, //允许跨域\n \n       },\n     },\n"
                },
                {
                    "date": 1644746277295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,18 +174,18 @@\n     },\n   },\n   // 需要gzip压缩的文件\n   devServer: {\n-    // host: \"localhost\",\n-    // port: 8080, // 端口号\n-    // open: false, // 配置自动启动浏览器\n-    // before(app, server) {\n-    //   app.get(/.*.(js)$/, (req, res, next) => {\n-    //     req.url = req.url + \".gz\";\n-    //     res.set(\"Content-Encoding\", \"gzip\");\n-    //     next();\n-    //   });\n-    // },\n+    host: \"localhost\",\n+    port: 8080, // 端口号\n+    open: false, // 配置自动启动浏览器\n+    before(app, server) {\n+      app.get(/.*.(js)$/, (req, res, next) => {\n+        req.url = req.url + \".gz\";\n+        res.set(\"Content-Encoding\", \"gzip\");\n+        next();\n+      });\n+    },\n     proxy: {\n       \"/hou\": {\n         target: `http://127.0.0.1:8888`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n"
                },
                {
                    "date": 1644747140911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,13 @@\n     vue: \"Vue\",\n     vuex: \"Vuex\",\n     \"vue-router\": \"VueRouter\",\n     axios: \"axios\",\n+    //自己额外使用的第三方包\n+    lodash:'_',\n+    echarts:'echarts',\n+    nprogress:'NProgress',\n+    'vue-quill-editor':'VueQuillEditor'\n   },\n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n"
                },
                {
                    "date": 1644748814428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,10 +42,20 @@\n     \"https://cdn.bootcss.com/vuex/3.1.2/vuex.min.js\",\n     \"https://cdn.bootcss.com/axios/0.19.2/axios.min.js\",\n     \"https://cdn.bootcss.com/moment.js/2.24.0/moment.min.js\",\n     \"https://cdn.bootcss.com/echarts/3.7.1/echarts.min.js\",\n+    //第三方包\n+    \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.js\",\n+    \"https://cdn.staticfile.org/quill/1.3.6/quill.js\"\n+\n   ],\n-  css: [],\n+  css: [\n+    // 第三方css\n+\"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.css\",\n+\"https://cdn.staticfile.org/quill/1.3.6/quill.snow.css\",\n+\n+\n+  ],\n };\n \n function resolve(dir) {\n   return path.join(__dirname, dir);\n"
                },
                {
                    "date": 1644748999399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,12 +29,12 @@\n     vuex: \"Vuex\",\n     \"vue-router\": \"VueRouter\",\n     axios: \"axios\",\n     //自己额外使用的第三方包\n-    lodash:'_',\n-    echarts:'echarts',\n-    nprogress:'NProgress',\n-    'vue-quill-editor':'VueQuillEditor'\n+    lodash: \"_\",\n+    echarts: \"echarts\",\n+    nprogress: \"NProgress\",\n+    \"vue-quill-editor\": \"VueQuillEditor\",\n   },\n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n@@ -44,17 +44,15 @@\n     \"https://cdn.bootcss.com/moment.js/2.24.0/moment.min.js\",\n     \"https://cdn.bootcss.com/echarts/3.7.1/echarts.min.js\",\n     //第三方包\n     \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.js\",\n-    \"https://cdn.staticfile.org/quill/1.3.6/quill.js\"\n-\n+    \"https://cdn.staticfile.org/quill/1.3.6/quill.js\",\n+    \"https://cdn.bootcdn.net/ajax/libs/lodash.js/4.17.21/lodash.min.js\",\n   ],\n   css: [\n     // 第三方css\n-\"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.css\",\n-\"https://cdn.staticfile.org/quill/1.3.6/quill.snow.css\",\n-\n-\n+    \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.css\",\n+    \"https://cdn.staticfile.org/quill/1.3.6/quill.snow.css\",\n   ],\n };\n \n function resolve(dir) {\n@@ -209,9 +207,8 @@\n         pathRewrite: {\n           \"^/hou\": \"\",\n         },\n         changeOrigin: true, //允许跨域\n-\n       },\n     },\n   },\n };\n"
                },
                {
                    "date": 1644749369841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n const cdn = {\n   // 忽略打包的第三方库\n   externals: {\n     vue: \"Vue\",\n-    vuex: \"Vuex\",\n+    // vuex: \"Vuex\",\n     \"vue-router\": \"VueRouter\",\n     axios: \"axios\",\n     //自己额外使用的第三方包\n     lodash: \"_\",\n@@ -38,9 +38,9 @@\n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n     \"https://cdn.bootcss.com/vue-router/3.1.2/vue-router.min.js\",\n-    \"https://cdn.bootcss.com/vuex/3.1.2/vuex.min.js\",\n+    // \"https://cdn.bootcss.com/vuex/3.1.2/vuex.min.js\",\n     \"https://cdn.bootcss.com/axios/0.19.2/axios.min.js\",\n     \"https://cdn.bootcss.com/moment.js/2.24.0/moment.min.js\",\n     \"https://cdn.bootcss.com/echarts/3.7.1/echarts.min.js\",\n     //第三方包\n"
                },
                {
                    "date": 1644749801679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,11 @@\n   ],\n   css: [\n     // 第三方css\n     \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.css\",\n-    \"https://cdn.staticfile.org/quill/1.3.6/quill.snow.css\",\n+    <link href=\"https://cdn.staticfile.org/quill/1.3.4/quill.core.min.css\" rel=\"stylesheet\"/>\n+    <link href=\"https://cdn.staticfile.org/quill/1.3.4/quill.snow.min.css\" rel=\"stylesheet\"/>\n+    <link href=\"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\" rel=\"stylesheet\"/>\n   ],\n };\n \n function resolve(dir) {\n"
                },
                {
                    "date": 1644749866200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,17 +44,17 @@\n     \"https://cdn.bootcss.com/moment.js/2.24.0/moment.min.js\",\n     \"https://cdn.bootcss.com/echarts/3.7.1/echarts.min.js\",\n     //第三方包\n     \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.js\",\n-    \"https://cdn.staticfile.org/quill/1.3.6/quill.js\",\n+    \"https://cdn.staticfile.org/quill/1.3.4/quill.min.js\",\n     \"https://cdn.bootcdn.net/ajax/libs/lodash.js/4.17.21/lodash.min.js\",\n   ],\n   css: [\n     // 第三方css\n     \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.css\",\n-    <link href=\"https://cdn.staticfile.org/quill/1.3.4/quill.core.min.css\" rel=\"stylesheet\"/>\n-    <link href=\"https://cdn.staticfile.org/quill/1.3.4/quill.snow.min.css\" rel=\"stylesheet\"/>\n-    <link href=\"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\" rel=\"stylesheet\"/>\n+   \"https://cdn.staticfile.org/quill/1.3.4/quill.core.min.css\",\n+   \"https://cdn.staticfile.org/quill/1.3.4/quill.snow.min.css\",\n+   \"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\"\n   ],\n };\n \n function resolve(dir) {\n"
                },
                {
                    "date": 1644750001430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,11 +119,13 @@\n   },\n   // webpack的配置\n   configureWebpack: (config) => {\n     // 忽略打包配置\n-    config.externals = cdn.externals;\n+    // config.externals = cdn.externals;\n     // 生产环境配置\n     if (process.env.NODE_ENV === \"production\") {\n+    config.externals = cdn.externals;\n+\n       // 代码压缩去除console.log\n       config.plugins.push(\n         new TerserPlugin({\n           terserOptions: {\n"
                },
                {
                    "date": 1644750094230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,13 +119,11 @@\n   },\n   // webpack的配置\n   configureWebpack: (config) => {\n     // 忽略打包配置\n-    // config.externals = cdn.externals;\n+    config.externals = cdn.externals;\n     // 生产环境配置\n     if (process.env.NODE_ENV === \"production\") {\n-    config.externals = cdn.externals;\n-\n       // 代码压缩去除console.log\n       config.plugins.push(\n         new TerserPlugin({\n           terserOptions: {\n"
                },
                {
                    "date": 1644750229784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,11 +50,11 @@\n   ],\n   css: [\n     // 第三方css\n     \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.css\",\n-   \"https://cdn.staticfile.org/quill/1.3.4/quill.core.min.css\",\n-   \"https://cdn.staticfile.org/quill/1.3.4/quill.snow.min.css\",\n-   \"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\"\n+  //  \"https://cdn.staticfile.org/quill/1.3.4/quill.core.min.css\",\n+  //  \"https://cdn.staticfile.org/quill/1.3.4/quill.snow.min.css\",\n+  //  \"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\"\n   ],\n };\n \n function resolve(dir) {\n"
                },
                {
                    "date": 1644750330612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,17 +44,13 @@\n     \"https://cdn.bootcss.com/moment.js/2.24.0/moment.min.js\",\n     \"https://cdn.bootcss.com/echarts/3.7.1/echarts.min.js\",\n     //第三方包\n     \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.js\",\n-    \"https://cdn.staticfile.org/quill/1.3.4/quill.min.js\",\n     \"https://cdn.bootcdn.net/ajax/libs/lodash.js/4.17.21/lodash.min.js\",\n   ],\n   css: [\n     // 第三方css\n     \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.css\",\n-  //  \"https://cdn.staticfile.org/quill/1.3.4/quill.core.min.css\",\n-  //  \"https://cdn.staticfile.org/quill/1.3.4/quill.snow.min.css\",\n-  //  \"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\"\n   ],\n };\n \n function resolve(dir) {\n"
                },
                {
                    "date": 1644750443855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,15 +32,15 @@\n     //自己额外使用的第三方包\n     lodash: \"_\",\n     echarts: \"echarts\",\n     nprogress: \"NProgress\",\n-    \"vue-quill-editor\": \"VueQuillEditor\",\n+    // \"vue-quill-editor\": \"VueQuillEditor\",\n   },\n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n     \"https://cdn.bootcss.com/vue-router/3.1.2/vue-router.min.js\",\n-    // \"https://cdn.bootcss.com/vuex/3.1.2/vuex.min.js\",\n+    \"https://cdn.bootcss.com/vuex/3.1.2/vuex.min.js\",\n     \"https://cdn.bootcss.com/axios/0.19.2/axios.min.js\",\n     \"https://cdn.bootcss.com/moment.js/2.24.0/moment.min.js\",\n     \"https://cdn.bootcss.com/echarts/3.7.1/echarts.min.js\",\n     //第三方包\n"
                },
                {
                    "date": 1644750699001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,8 @@\n     //自己额外使用的第三方包\n     lodash: \"_\",\n     echarts: \"echarts\",\n     nprogress: \"NProgress\",\n-    // \"vue-quill-editor\": \"VueQuillEditor\",\n   },\n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n"
                },
                {
                    "date": 1644750974646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,12 +44,14 @@\n     \"https://cdn.bootcss.com/echarts/3.7.1/echarts.min.js\",\n     //第三方包\n     \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.js\",\n     \"https://cdn.bootcdn.net/ajax/libs/lodash.js/4.17.21/lodash.min.js\",\n+    \"https://unpkg.com/element-ui/lib/index.js\"\n   ],\n   css: [\n     // 第三方css\n     \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.css\",\n+    \"https://unpkg.com/element-ui/lib/theme-chalk/index.css\"\n   ],\n };\n \n function resolve(dir) {\n"
                },
                {
                    "date": 1644751809431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,26 +32,33 @@\n     //自己额外使用的第三方包\n     lodash: \"_\",\n     echarts: \"echarts\",\n     nprogress: \"NProgress\",\n+    \"vue-quill-editor\":'VueQuillEditor'\n   },\n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n     \"https://cdn.bootcss.com/vue-router/3.1.2/vue-router.min.js\",\n     \"https://cdn.bootcss.com/vuex/3.1.2/vuex.min.js\",\n     \"https://cdn.bootcss.com/axios/0.19.2/axios.min.js\",\n-    \"https://cdn.bootcss.com/moment.js/2.24.0/moment.min.js\",\n+    // \"https://cdn.bootcss.com/moment.js/2.24.0/moment.min.js\",\n     \"https://cdn.bootcss.com/echarts/3.7.1/echarts.min.js\",\n     //第三方包\n     \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.js\",\n     \"https://cdn.bootcdn.net/ajax/libs/lodash.js/4.17.21/lodash.min.js\",\n-    \"https://unpkg.com/element-ui/lib/index.js\"\n+    \"https://unpkg.com/element-ui/lib/index.js\",\n+    \"https://cdn.staticfile.org/quill/1.3.4/quill.min.js\",\n+    \"https://cdn.jsdelivr.net/npm/vue-quill-editor@3.0.4/dist/vue-quill-editor.js\",\n+\n   ],\n   css: [\n     // 第三方css\n     \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.css\",\n-    \"https://unpkg.com/element-ui/lib/theme-chalk/index.css\"\n+    \"https://unpkg.com/element-ui/lib/theme-chalk/index.css\",\n+    \"https://cdn.staticfile.org/quill/1.3.4/quill.core.min.css\",\n+    \"https://cdn.staticfile.org/quill/1.3.4/quill.snow.min.css\",\n+    \"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\"\n   ],\n };\n \n function resolve(dir) {\n"
                },
                {
                    "date": 1644751986412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n   // 忽略打包的第三方库\n   externals: {\n     vue: \"Vue\",\n     // vuex: \"Vuex\",\n+    \"element-ui\":\"ElementUI\",\n     \"vue-router\": \"VueRouter\",\n     axios: \"axios\",\n     //自己额外使用的第三方包\n     lodash: \"_\",\n"
                },
                {
                    "date": 1644752062078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n     \"https://cdn.bootcss.com/vue-router/3.1.2/vue-router.min.js\",\n-    \"https://cdn.bootcss.com/vuex/3.1.2/vuex.min.js\",\n+    // \"https://cdn.bootcss.com/vuex/3.1.2/vuex.min.js\",\n     \"https://cdn.bootcss.com/axios/0.19.2/axios.min.js\",\n     // \"https://cdn.bootcss.com/moment.js/2.24.0/moment.min.js\",\n     \"https://cdn.bootcss.com/echarts/3.7.1/echarts.min.js\",\n     //第三方包\n"
                },
                {
                    "date": 1644752188322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,8 @@\n   // 忽略打包的第三方库\n   externals: {\n     vue: \"Vue\",\n     // vuex: \"Vuex\",\n-    \"element-ui\":\"ElementUI\",\n     \"vue-router\": \"VueRouter\",\n     axios: \"axios\",\n     //自己额外使用的第三方包\n     lodash: \"_\",\n"
                },
                {
                    "date": 1644752496423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,8 +85,9 @@\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n     });\n     // 配置cdn引入\n     config.plugin(\"html\").tap((args) => {\n+      \n       args[0].cdn = cdn;\n       return args;\n     });\n \n"
                },
                {
                    "date": 1644752501514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n     });\n     // 配置cdn引入\n     config.plugin(\"html\").tap((args) => {\n-      \n+      ar\n       args[0].cdn = cdn;\n       return args;\n     });\n \n"
                },
                {
                    "date": 1644752508419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n     });\n     // 配置cdn引入\n     config.plugin(\"html\").tap((args) => {\n-      ar\n+      args[0].is\n       args[0].cdn = cdn;\n       return args;\n     });\n \n"
                },
                {
                    "date": 1644752519588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n     });\n     // 配置cdn引入\n     config.plugin(\"html\").tap((args) => {\n-      args[0].is\n+      args[0].isProd =\n       args[0].cdn = cdn;\n       return args;\n     });\n \n"
                },
                {
                    "date": 1644752525758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,10 +85,10 @@\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n     });\n     // 配置cdn引入\n     config.plugin(\"html\").tap((args) => {\n-      args[0].isProd =\n-      args[0].cdn = cdn;\n+      args[0].isProd = true;\n+      // args[0].cdn = cdn;\n       return args;\n     });\n \n     // 移除prefetch插件，避免加载多余的资源\n"
                },
                {
                    "date": 1644752545606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     });\n     // 配置cdn引入\n     config.plugin(\"html\").tap((args) => {\n       args[0].isProd = true;\n-      // args[0].cdn = cdn;\n+      args[0].cdn = cdn;\n       return args;\n     });\n \n     // 移除prefetch插件，避免加载多余的资源\n"
                },
                {
                    "date": 1644752551859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,8 @@\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n     });\n     // 配置cdn引入\n     config.plugin(\"html\").tap((args) => {\n-      args[0].isProd = true;\n       args[0].cdn = cdn;\n       return args;\n     });\n \n"
                },
                {
                    "date": 1644752565848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,18 +78,22 @@\n   productionSourceMap: false,\n   chainWebpack: (config) => {\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n+      // config.plugin(\"html\").tap((args) => {\n+    //   args[0].cdn = cdn;\n+    //   return args;\n+    // });\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n     });\n     // 配置cdn引入\n-    config.plugin(\"html\").tap((args) => {\n-      args[0].cdn = cdn;\n-      return args;\n-    });\n+    // config.plugin(\"html\").tap((args) => {\n+    //   args[0].cdn = cdn;\n+    //   return args;\n+    // });\n \n     // 移除prefetch插件，避免加载多余的资源\n     config.plugins.delete(\"prefetch\");\n \n"
                },
                {
                    "date": 1644752575008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,12 +78,12 @@\n   productionSourceMap: false,\n   chainWebpack: (config) => {\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n-      // config.plugin(\"html\").tap((args) => {\n-    //   args[0].cdn = cdn;\n-    //   return args;\n-    // });\n+      config.plugin(\"html\").tap((args) => {\n+      args[0].isProd = cdn;\n+      return args;\n+    });\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n"
                },
                {
                    "date": 1644752594096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,15 +79,19 @@\n   chainWebpack: (config) => {\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n       config.plugin(\"html\").tap((args) => {\n-      args[0].isProd = cdn;\n+      args[0].isProd = true;\n       return args;\n     });\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n+      config.plugin(\"html\").tap((args) => {\n+        args[0].isProd = true;\n+        return args;\n+      });\n     });\n     // 配置cdn引入\n     // config.plugin(\"html\").tap((args) => {\n     //   args[0].cdn = cdn;\n"
                },
                {
                    "date": 1644752600238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,18 +78,15 @@\n   productionSourceMap: false,\n   chainWebpack: (config) => {\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n-      config.plugin(\"html\").tap((args) => {\n-      args[0].isProd = true;\n-      return args;\n-    });\n+      \n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n       config.plugin(\"html\").tap((args) => {\n-        args[0].isProd = true;\n+        args[0].isProd = false;\n         return args;\n       });\n     });\n     // 配置cdn引入\n"
                },
                {
                    "date": 1644752875915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     //自己额外使用的第三方包\n     lodash: \"_\",\n     echarts: \"echarts\",\n     nprogress: \"NProgress\",\n-    \"vue-quill-editor\":'VueQuillEditor'\n+    \"vue-quill-editor\": \"VueQuillEditor\",\n   },\n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n@@ -48,17 +48,16 @@\n     \"https://cdn.bootcdn.net/ajax/libs/lodash.js/4.17.21/lodash.min.js\",\n     \"https://unpkg.com/element-ui/lib/index.js\",\n     \"https://cdn.staticfile.org/quill/1.3.4/quill.min.js\",\n     \"https://cdn.jsdelivr.net/npm/vue-quill-editor@3.0.4/dist/vue-quill-editor.js\",\n-\n   ],\n   css: [\n     // 第三方css\n     \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.css\",\n     \"https://unpkg.com/element-ui/lib/theme-chalk/index.css\",\n     \"https://cdn.staticfile.org/quill/1.3.4/quill.core.min.css\",\n     \"https://cdn.staticfile.org/quill/1.3.4/quill.snow.min.css\",\n-    \"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\"\n+    \"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\",\n   ],\n };\n \n function resolve(dir) {\n@@ -78,19 +77,22 @@\n   productionSourceMap: false,\n   chainWebpack: (config) => {\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n-      \n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n+      config.plugin(\"html\").tap((args) => {\n+        args[0].isProd = true;\n+        return args;\n+      });\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n       config.plugin(\"html\").tap((args) => {\n         args[0].isProd = false;\n         return args;\n       });\n     });\n-    // 配置cdn引入\n+    // 配置cdn引入 全部都cdn引入\n     // config.plugin(\"html\").tap((args) => {\n     //   args[0].cdn = cdn;\n     //   return args;\n     // });\n"
                },
                {
                    "date": 1644753282074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,13 +90,13 @@\n         args[0].isProd = false;\n         return args;\n       });\n     });\n-    // 配置cdn引入 全部都cdn引入\n-    // config.plugin(\"html\").tap((args) => {\n-    //   args[0].cdn = cdn;\n-    //   return args;\n-    // });\n+    // 配置cdn引入\n+    config.plugin(\"html\").tap((args) => {\n+      args[0].cdn = cdn;\n+      return args;\n+    });\n \n     // 移除prefetch插件，避免加载多余的资源\n     config.plugins.delete(\"prefetch\");\n \n"
                },
                {
                    "date": 1644753421321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,16 +76,16 @@\n   indexPath: \"static/index.html\",\n   productionSourceMap: false,\n   chainWebpack: (config) => {\n     // 自定义打包入口\n-    config.when(process.env.NODE_ENV === \"production\", (config) => {\n+    config.when(process.env.NODE_ENV === \"production\", () => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n       config.plugin(\"html\").tap((args) => {\n         args[0].isProd = true;\n         return args;\n       });\n     });\n-    config.when(process.env.NODE_ENV === \"development\", (config) => {\n+    config.when(process.env.NODE_ENV === \"development\", () => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n       config.plugin(\"html\").tap((args) => {\n         args[0].isProd = false;\n         return args;\n"
                },
                {
                    "date": 1644753472631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,12 +91,12 @@\n         return args;\n       });\n     });\n     // 配置cdn引入\n-    config.plugin(\"html\").tap((args) => {\n-      args[0].cdn = cdn;\n-      return args;\n-    });\n+    // config.plugin(\"html\").tap((args) => {\n+    //   args[0].cdn = cdn;\n+    //   return args;\n+    // });\n \n     // 移除prefetch插件，避免加载多余的资源\n     config.plugins.delete(\"prefetch\");\n \n"
                },
                {
                    "date": 1644753634438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,27 +76,21 @@\n   indexPath: \"static/index.html\",\n   productionSourceMap: false,\n   chainWebpack: (config) => {\n     // 自定义打包入口\n-    config.when(process.env.NODE_ENV === \"production\", () => {\n+    config.when(process.env.NODE_ENV === \"production\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n-      config.plugin(\"html\").tap((args) => {\n-        args[0].isProd = true;\n-        return args;\n-      });\n+      // 配置cdn引入\n+    config.plugin(\"html\").tap((args) => {\n+      args[0].cdn = cdn;\n+      return args;\n     });\n-    config.when(process.env.NODE_ENV === \"development\", () => {\n+    });\n+    config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n-      config.plugin(\"html\").tap((args) => {\n-        args[0].isProd = false;\n-        return args;\n-      });\n+      \n     });\n-    // 配置cdn引入\n-    // config.plugin(\"html\").tap((args) => {\n-    //   args[0].cdn = cdn;\n-    //   return args;\n-    // });\n+    \n \n     // 移除prefetch插件，避免加载多余的资源\n     config.plugins.delete(\"prefetch\");\n \n"
                },
                {
                    "date": 1644753981289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n     \"https://cdn.staticfile.org/quill/1.3.4/quill.snow.min.css\",\n     \"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\",\n   ],\n };\n-\n+const isProd = false;\n function resolve(dir) {\n   return path.join(__dirname, dir);\n }\n \n@@ -78,19 +78,19 @@\n   chainWebpack: (config) => {\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n-      // 配置cdn引入\n-    config.plugin(\"html\").tap((args) => {\n-      args[0].cdn = cdn;\n-      return args;\n+      isProd = true;\n     });\n-    });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n-      \n+      isProd = false;\n     });\n-    \n+    // 配置cdn引入\n+    config.plugin(\"html\").tap((args) => {\n+      isProd && (args[0].cdn = cdn)     \n+      return args;\n+    });\n \n     // 移除prefetch插件，避免加载多余的资源\n     config.plugins.delete(\"prefetch\");\n \n"
                },
                {
                    "date": 1644754110011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n     \"https://cdn.staticfile.org/quill/1.3.4/quill.snow.min.css\",\n     \"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\",\n   ],\n };\n-const isProd = false;\n+let isProd = false;\n function resolve(dir) {\n   return path.join(__dirname, dir);\n }\n \n@@ -82,13 +82,13 @@\n       isProd = true;\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n-      isProd = false;\n+      isProd = false\n     });\n     // 配置cdn引入\n     config.plugin(\"html\").tap((args) => {\n-      isProd && (args[0].cdn = cdn)     \n+      isProd && (args[0].cdn = cdn);\n       return args;\n     });\n \n     // 移除prefetch插件，避免加载多余的资源\n"
                },
                {
                    "date": 1644754374843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n     \"https://cdn.staticfile.org/quill/1.3.4/quill.snow.min.css\",\n     \"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\",\n   ],\n };\n-let isProd = false;\n+\n function resolve(dir) {\n   return path.join(__dirname, dir);\n }\n \n@@ -78,19 +78,25 @@\n   chainWebpack: (config) => {\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n-      isProd = true;\n+      config.plugin(\"html\").tap((args) => {\n+        args[0].cdn = cdn;\n+        return args;\n+      });\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n-      isProd = false\n+      config.plugin(\"html\").tap((args) => {\n+        args[0].isPro = false;\n+        return args;\n+      });\n     });\n-    // 配置cdn引入\n-    config.plugin(\"html\").tap((args) => {\n-      isProd && (args[0].cdn = cdn);\n-      return args;\n-    });\n+    // 配置cdn引入 全部都cdn引入\n+    // config.plugin(\"html\").tap((args) => {\n+    //   args[0].cdn = cdn;\n+    //   return args;\n+    // });\n \n     // 移除prefetch插件，避免加载多余的资源\n     config.plugins.delete(\"prefetch\");\n \n"
                },
                {
                    "date": 1644754380811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n       config.plugin(\"html\").tap((args) => {\n-        args[0].isPro = false;\n+        args[0].isProd = false;\n         return args;\n       });\n     });\n     // 配置cdn引入 全部都cdn引入\n"
                },
                {
                    "date": 1644754492269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,12 +78,8 @@\n   chainWebpack: (config) => {\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n-      config.plugin(\"html\").tap((args) => {\n-        args[0].cdn = cdn;\n-        return args;\n-      });\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n       config.plugin(\"html\").tap((args) => {\n"
                },
                {
                    "date": 1644754617064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,21 +78,25 @@\n   chainWebpack: (config) => {\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n+      config.plugin(\"html\").tap((args) => {\n+        args[0].isProd = true;\n+        return args;\n+      });\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n       config.plugin(\"html\").tap((args) => {\n         args[0].isProd = false;\n         return args;\n       });\n     });\n-    // 配置cdn引入 全部都cdn引入\n-    // config.plugin(\"html\").tap((args) => {\n-    //   args[0].cdn = cdn;\n-    //   return args;\n-    // });\n+    // 配置cdn引入\n+    config.plugin(\"html\").tap((args) => {\n+      args[0].cdn = cdn;\n+      return args;\n+    });\n \n     // 移除prefetch插件，避免加载多余的资源\n     config.plugins.delete(\"prefetch\");\n \n"
                },
                {
                    "date": 1644754953249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     //自己额外使用的第三方包\n     lodash: \"_\",\n     echarts: \"echarts\",\n     nprogress: \"NProgress\",\n-    \"vue-quill-editor\": \"VueQuillEditor\",\n+    \"vue-quill-editor\":'VueQuillEditor'\n   },\n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n@@ -48,16 +48,17 @@\n     \"https://cdn.bootcdn.net/ajax/libs/lodash.js/4.17.21/lodash.min.js\",\n     \"https://unpkg.com/element-ui/lib/index.js\",\n     \"https://cdn.staticfile.org/quill/1.3.4/quill.min.js\",\n     \"https://cdn.jsdelivr.net/npm/vue-quill-editor@3.0.4/dist/vue-quill-editor.js\",\n+\n   ],\n   css: [\n     // 第三方css\n     \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.css\",\n     \"https://unpkg.com/element-ui/lib/theme-chalk/index.css\",\n     \"https://cdn.staticfile.org/quill/1.3.4/quill.core.min.css\",\n     \"https://cdn.staticfile.org/quill/1.3.4/quill.snow.min.css\",\n-    \"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\",\n+    \"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\"\n   ],\n };\n \n function resolve(dir) {\n@@ -78,25 +79,26 @@\n   chainWebpack: (config) => {\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n-      config.plugin(\"html\").tap((args) => {\n-        args[0].isProd = true;\n-        return args;\n-      });\n+      config.set(cdn)\n+      config.plugin('html').tap(args => {\n+        args[0].isProd = true\n+        return args\n+      })\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n-      config.plugin(\"html\").tap((args) => {\n-        args[0].isProd = false;\n-        return args;\n-      });\n+      config.plugin('html').tap(args => {\n+        args[0].isProd = false\n+        return args\n+      })\n     });\n     // 配置cdn引入\n-    config.plugin(\"html\").tap((args) => {\n-      args[0].cdn = cdn;\n-      return args;\n-    });\n+    // config.plugin(\"html\").tap((args) => {\n+    //   args[0].cdn = cdn;\n+    //   return args;\n+    // });\n \n     // 移除prefetch插件，避免加载多余的资源\n     config.plugins.delete(\"prefetch\");\n \n"
                },
                {
                    "date": 1644755060496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,26 +79,22 @@\n   chainWebpack: (config) => {\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n-      config.set(cdn)\n-      config.plugin('html').tap(args => {\n-        args[0].isProd = true\n-        return args\n-      })\n+      config.plugin(\"html\").tap((args) => {\n+        args[0].Prod = true;\n+        return args;\n+      });\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n-      config.plugin('html').tap(args => {\n-        args[0].isProd = false\n-        return args\n-      })\n+      \n     });\n     // 配置cdn引入\n-    // config.plugin(\"html\").tap((args) => {\n-    //   args[0].cdn = cdn;\n-    //   return args;\n-    // });\n+    config.plugin(\"html\").tap((args) => {\n+      args[0].cdn = cdn;\n+      return args;\n+    });\n \n     // 移除prefetch插件，避免加载多余的资源\n     config.plugins.delete(\"prefetch\");\n \n"
                },
                {
                    "date": 1644755219449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,225 +1,35 @@\n-/* \n-出现问题:\n-1.TypeError: Cannot read property ‘tapPromise‘ of undefined\n-// 打包压缩版本问题\n-使用vue cli  4 webpack进行打包时出现了  ERROR TypeError:Cannot read property ‘tapPromise‘ of undefined问题,  以为配置有问题但是最后发现是是compression-webpack-plugin版本问题，\n-compression-webpack-plugin 默认安装的是 7 版本的\n-先执行卸载命令->npm uninstall compression-webpack-plugin\n-执行安装命令->npm i compression-webpack-plugin@5.0.1 -D\n-2.原因：webpack4中用到terser-webpack-plugin压缩插件，不能使用最新的版本，而是terser-webpack-plugin@4.x版本；webpack5对应的使用terser-webpack-plugin@5.x版本\n-解决办法：将package.json中terser-webpack-plugin的版本换成4.2.3，然后再num install一下安装对应的版本依赖就好使了。\n-*/\n-// vue.config.js配置\n-\n-const path = require(\"path\"); //不用下载\n-\n-// gzip压缩插件\n-const CompressionWebpackPlugin = require(\"compression-webpack-plugin\");\n-\n-// 代码打包之后取出console.log压缩代码\n-const TerserPlugin = require(\"terser-webpack-plugin\");\n-\n-// 图形化打包详情\n-const BundleAnalyzer = require(\"webpack-bundle-analyzer\").BundleAnalyzerPlugin;\n-\n-const cdn = {\n-  // 忽略打包的第三方库\n-  externals: {\n-    vue: \"Vue\",\n-    // vuex: \"Vuex\",\n-    \"vue-router\": \"VueRouter\",\n-    axios: \"axios\",\n-    //自己额外使用的第三方包\n-    lodash: \"_\",\n-    echarts: \"echarts\",\n-    nprogress: \"NProgress\",\n-    \"vue-quill-editor\":'VueQuillEditor'\n-  },\n-  // 通过cdn方式使用\n-  js: [\n-    \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n-    \"https://cdn.bootcss.com/vue-router/3.1.2/vue-router.min.js\",\n-    // \"https://cdn.bootcss.com/vuex/3.1.2/vuex.min.js\",\n-    \"https://cdn.bootcss.com/axios/0.19.2/axios.min.js\",\n-    // \"https://cdn.bootcss.com/moment.js/2.24.0/moment.min.js\",\n-    \"https://cdn.bootcss.com/echarts/3.7.1/echarts.min.js\",\n-    //第三方包\n-    \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.js\",\n-    \"https://cdn.bootcdn.net/ajax/libs/lodash.js/4.17.21/lodash.min.js\",\n-    \"https://unpkg.com/element-ui/lib/index.js\",\n-    \"https://cdn.staticfile.org/quill/1.3.4/quill.min.js\",\n-    \"https://cdn.jsdelivr.net/npm/vue-quill-editor@3.0.4/dist/vue-quill-editor.js\",\n-\n-  ],\n-  css: [\n-    // 第三方css\n-    \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.css\",\n-    \"https://unpkg.com/element-ui/lib/theme-chalk/index.css\",\n-    \"https://cdn.staticfile.org/quill/1.3.4/quill.core.min.css\",\n-    \"https://cdn.staticfile.org/quill/1.3.4/quill.snow.min.css\",\n-    \"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\"\n-  ],\n-};\n-\n-function resolve(dir) {\n-  return path.join(__dirname, dir);\n-}\n-\n+// vue.config.js\n module.exports = {\n-  // 是否触发eslint检查\n-  lintOnSave: false,\n-  publicPath: \"/\",\n-  // 打包文件的出口\n-  outputDir: \"dist\",\n-  // 放置生成的css和js和img和fonts的目录\n-  assetsDir: \"static\",\n-  // 存放index.html模板的路径\n-  indexPath: \"static/index.html\",\n-  productionSourceMap: false,\n-  chainWebpack: (config) => {\n-    // 自定义打包入口\n-    config.when(process.env.NODE_ENV === \"production\", (config) => {\n-      config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n-      config.plugin(\"html\").tap((args) => {\n-        args[0].Prod = true;\n-        return args;\n-      });\n-    });\n-    config.when(process.env.NODE_ENV === \"development\", (config) => {\n-      config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n-      \n-    });\n-    // 配置cdn引入\n-    config.plugin(\"html\").tap((args) => {\n-      args[0].cdn = cdn;\n-      return args;\n-    });\n-\n-    // 移除prefetch插件，避免加载多余的资源\n-    config.plugins.delete(\"prefetch\");\n-\n-    // 定义文件夹的路径\n-    config.resolve.alias\n-      .set(\"@\", resolve(\"src\"))\n-      .set(\"assets\", resolve(\"src/assets\"))\n-      .set(\"components\", resolve(\"src/components\"))\n-      .set(\"router\", resolve(\"src/router\"))\n-      .set(\"store\", resolve(\"src/store\"))\n-      .set(\"views\", resolve(\"src/views\"));\n-\n-    // 压缩图片\n-    const imagesRule = config.module.rule(\"images\");\n-    imagesRule.uses.clear();\n-    imagesRule\n-      .use(\"file-loader\")\n-      .loader(\"url-loader\")\n-      .options({\n-        limit: 10240,\n-        fallback: {\n-          loader: \"file-loader\",\n-          options: {\n-            outputPath: \"static/images\",\n-          },\n-        },\n-      });\n-\n-    // 压缩响应的app.json返回的代码压缩\n-    config.optimization.minimize(true);\n+  devServer: {\n+    open: false,\n+    port: 9999\n   },\n-  // webpack的配置\n-  configureWebpack: (config) => {\n-    // 忽略打包配置\n-    config.externals = cdn.externals;\n-    // 生产环境配置\n-    if (process.env.NODE_ENV === \"production\") {\n-      // 代码压缩去除console.log\n-      config.plugins.push(\n-        new TerserPlugin({\n-          terserOptions: {\n-            ecma: undefined,\n-            warnings: false,\n-            parse: {},\n-            compress: {\n-              drop_console: true,\n-              drop_debugger: false,\n-              pure_funcs: [\"console.log\"], // 移除console\n-            },\n-          },\n-        })\n-      );\n-    }\n+  chainWebpack: config => {\n+    config.when(process.env.NODE_ENV === 'production', config => {\n+      config.entry('app').clear().add('./src/main-prod.js')\n \n-    // 开启gzip压缩\n-    config.plugins.push(\n-      new CompressionWebpackPlugin({\n-        filename: (info) => {\n-          return `${info.path}.gz${info.query}`;\n-        },\n-        algorithm: \"gzip\",\n-        threshold: 10240, // 只有大小大于该值的资源会被处理 10240\n-        test: new RegExp(\"\\\\.(\" + [\"js\"].join(\"|\") + \")$\"),\n-        minRatio: 0.8, // 只有压缩率小于这个值的资源才会被处理\n-        deleteOriginalAssets: false, // 删除原文件\n+      config.set('externals', {\n+        vue: 'Vue',\n+        'vue-router': 'VueRouter',\n+        axios: 'axios',\n+        lodash: '_',\n+        echarts: 'echarts',\n+        nprogress: 'NProgress',\n+        'vue-quill-editor': 'VueQuillEditor'\n       })\n-    );\n \n-    // 展示打包图形化信息\n-    // config.plugins.push(new BundleAnalyzer());\n+      config.plugin('html').tap(args => {\n+        args[0].isProd = true\n+        return args\n+      })\n+    })\n+    config.when(process.env.NODE_ENV === 'development', config => {\n+      config.entry('app').clear().add('./src/main-dev.js')\n \n-    // 公共代码抽离\n-    config.optimization = {\n-      splitChunks: {\n-        cacheGroups: {\n-          vendor: {\n-            chunks: \"all\",\n-            test: /node_modules/,\n-            name: \"vendor\",\n-            minChunks: 1,\n-            maxInitialRequests: 5,\n-            minSize: 0,\n-            priority: 100,\n-          },\n-        },\n-      },\n-    };\n-  },\n-  css: {\n-    extract: true,\n-    sourceMap: false,\n-    loaderOptions: {\n-      // 定义全局scss无需引入即可使用\n-      sass: {\n-        prependData: `\n-          @import \"@/assets/css/variable.scss\";\n-          @import \"@/assets/css/common.scss\";\n-          @import \"@/assets/css/mixin.scss\";\n-        `,\n-      },\n-    },\n-  },\n-  // 需要gzip压缩的文件\n-  devServer: {\n-    host: \"localhost\",\n-    port: 8080, // 端口号\n-    open: false, // 配置自动启动浏览器\n-    before(app, server) {\n-      app.get(/.*.(js)$/, (req, res, next) => {\n-        req.url = req.url + \".gz\";\n-        res.set(\"Content-Encoding\", \"gzip\");\n-        next();\n-      });\n-    },\n-    proxy: {\n-      \"/hou\": {\n-        target: `http://127.0.0.1:8888`,\n-        logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n-        ws: true, //如果要代理 websockets，配置这个参数\n-        secure: false, // 如果是https接口，需要配置这个参数\n-        pathRewrite: {\n-          \"^/hou\": \"\",\n-        },\n-        changeOrigin: true, //允许跨域\n-      },\n-    },\n-  },\n-};\n+      config.plugin('html').tap(args => {\n+        args[0].isProd = false\n+        return args\n+      })\n+    })\n+  }\n+}\n"
                },
                {
                    "date": 1644755311779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n // vue.config.js\n module.exports = {\n   devServer: {\n     open: false,\n-    port: 9999\n+    port: 9999,\n+    \n   },\n   chainWebpack: config => {\n     config.when(process.env.NODE_ENV === 'production', config => {\n       config.entry('app').clear().add('./src/main-prod.js')\n"
                },
                {
                    "date": 1644755318099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,24 @@\n // vue.config.js\n module.exports = {\n+  // 需要gzip压缩的文件\n   devServer: {\n-    open: false,\n-    port: 9999,\n-    \n+    host: \"localhost\",\n+    port: 8080, // 端口号\n+    open: false, // 配置自动启动浏览器\n+    },\n+    proxy: {\n+      \"/hou\": {\n+        target: `http://127.0.0.1:8888`,\n+        logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n+        ws: true, //如果要代理 websockets，配置这个参数\n+        secure: false, // 如果是https接口，需要配置这个参数\n+        pathRewrite: {\n+          \"^/hou\": \"\",\n+        },\n+        changeOrigin: true, //允许跨域\n+      },\n+    },\n   },\n   chainWebpack: config => {\n     config.when(process.env.NODE_ENV === 'production', config => {\n       config.entry('app').clear().add('./src/main-prod.js')\n"
                },
                {
                    "date": 1644755326370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,10 @@\n // vue.config.js\n module.exports = {\n-  // 需要gzip压缩的文件\n   devServer: {\n-    host: \"localhost\",\n-    port: 8080, // 端口号\n-    open: false, // 配置自动启动浏览器\n-    },\n-    proxy: {\n-      \"/hou\": {\n-        target: `http://127.0.0.1:8888`,\n-        logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n-        ws: true, //如果要代理 websockets，配置这个参数\n-        secure: false, // 如果是https接口，需要配置这个参数\n-        pathRewrite: {\n-          \"^/hou\": \"\",\n-        },\n-        changeOrigin: true, //允许跨域\n-      },\n-    },\n+    open: false,\n+    port: 9999,\n+    \n   },\n   chainWebpack: config => {\n     config.when(process.env.NODE_ENV === 'production', config => {\n       config.entry('app').clear().add('./src/main-prod.js')\n"
                },
                {
                    "date": 1644755336414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,29 @@\n // vue.config.js\n module.exports = {\n   devServer: {\n-    open: false,\n-    port: 9999,\n-    \n+    host: \"localhost\",\n+    port: 8080, // 端口号\n+    open: false, // 配置自动启动浏览器\n+    before(app, server) {\n+      app.get(/.*.(js)$/, (req, res, next) => {\n+        req.url = req.url + \".gz\";\n+        res.set(\"Content-Encoding\", \"gzip\");\n+        next();\n+      });\n+    },\n+    proxy: {\n+      \"/hou\": {\n+        target: `http://127.0.0.1:8888`,\n+        logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n+        ws: true, //如果要代理 websockets，配置这个参数\n+        secure: false, // 如果是https接口，需要配置这个参数\n+        pathRewrite: {\n+          \"^/hou\": \"\",\n+        },\n+        changeOrigin: true, //允许跨域\n+      },\n+    },\n   },\n   chainWebpack: config => {\n     config.when(process.env.NODE_ENV === 'production', config => {\n       config.entry('app').clear().add('./src/main-prod.js')\n"
                },
                {
                    "date": 1644755341745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,15 +3,9 @@\n   devServer: {\n     host: \"localhost\",\n     port: 8080, // 端口号\n     open: false, // 配置自动启动浏览器\n-    before(app, server) {\n-      app.get(/.*.(js)$/, (req, res, next) => {\n-        req.url = req.url + \".gz\";\n-        res.set(\"Content-Encoding\", \"gzip\");\n-        next();\n-      });\n-    },\n+    \n     proxy: {\n       \"/hou\": {\n         target: `http://127.0.0.1:8888`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n"
                },
                {
                    "date": 1644755383877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n   devServer: {\n     host: \"localhost\",\n     port: 8080, // 端口号\n     open: false, // 配置自动启动浏览器\n-    \n     proxy: {\n       \"/hou\": {\n         target: `http://127.0.0.1:8888`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n@@ -19,9 +18,9 @@\n     },\n   },\n   chainWebpack: config => {\n     config.when(process.env.NODE_ENV === 'production', config => {\n-      config.entry('app').clear().add('./src/main-prod.js')\n+      config.entry('app').clear().add('./src/main_prod.js')\n \n       config.set('externals', {\n         vue: 'Vue',\n         'vue-router': 'VueRouter',\n"
                },
                {
                    "date": 1644755389313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         return args\n       })\n     })\n     config.when(process.env.NODE_ENV === 'development', config => {\n-      config.entry('app').clear().add('./src/main-dev.js')\n+      config.entry('app').clear().add('./src/main_dev.js')\n \n       config.plugin('html').tap(args => {\n         args[0].isProd = false\n         return args\n"
                },
                {
                    "date": 1644759404600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,215 @@\n-// vue.config.js\n+/* \n+出现问题:\n+1.TypeError: Cannot read property ‘tapPromise‘ of undefined\n+// 打包压缩版本问题\n+使用vue cli  4 webpack进行打包时出现了  ERROR TypeError:Cannot read property ‘tapPromise‘ of undefined问题,  以为配置有问题但是最后发现是是compression-webpack-plugin版本问题，\n+compression-webpack-plugin 默认安装的是 7 版本的\n+先执行卸载命令->npm uninstall compression-webpack-plugin\n+执行安装命令->npm i compression-webpack-plugin@5.0.1 -D\n+2.原因：webpack4中用到terser-webpack-plugin压缩插件，不能使用最新的版本，而是terser-webpack-plugin@4.x版本；webpack5对应的使用terser-webpack-plugin@5.x版本\n+解决办法：将package.json中terser-webpack-plugin的版本换成4.2.3，然后再num install一下安装对应的版本依赖就好使了。\n+*/\n+// vue.config.js配置\n+\n+const path = require(\"path\"); //不用下载\n+\n+// gzip压缩插件\n+const CompressionWebpackPlugin = require(\"compression-webpack-plugin\");\n+\n+// 代码打包之后取出console.log压缩代码\n+const TerserPlugin = require(\"terser-webpack-plugin\");\n+\n+// 图形化打包详情\n+const BundleAnalyzer = require(\"webpack-bundle-analyzer\").BundleAnalyzerPlugin;\n+\n+const cdn = {\n+  // 忽略打包的第三方库\n+  externals: {\n+    vue: \"Vue\",\n+    // vuex: \"Vuex\",\n+    \"vue-router\": \"VueRouter\",\n+    axios: \"axios\",\n+    //自己额外使用的第三方包\n+    lodash: \"_\",\n+    echarts: \"echarts\",\n+    nprogress: \"NProgress\",\n+    \"vue-quill-editor\":'VueQuillEditor'\n+  },\n+  // 通过cdn方式使用\n+  js: [\n+    \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n+    \"https://cdn.bootcss.com/vue-router/3.1.2/vue-router.min.js\",\n+    // \"https://cdn.bootcss.com/vuex/3.1.2/vuex.min.js\",\n+    \"https://cdn.bootcss.com/axios/0.19.2/axios.min.js\",\n+    // \"https://cdn.bootcss.com/moment.js/2.24.0/moment.min.js\",\n+    \"https://cdn.bootcss.com/echarts/3.7.1/echarts.min.js\",\n+    //第三方包\n+    \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.js\",\n+    \"https://cdn.bootcdn.net/ajax/libs/lodash.js/4.17.21/lodash.min.js\",\n+    \"https://unpkg.com/element-ui/lib/index.js\",\n+    \"https://cdn.staticfile.org/quill/1.3.4/quill.min.js\",\n+    \"https://cdn.jsdelivr.net/npm/vue-quill-editor@3.0.4/dist/vue-quill-editor.js\",\n+\n+  ],\n+  css: [\n+    // 第三方css\n+    \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.css\",\n+    \"https://unpkg.com/element-ui/lib/theme-chalk/index.css\",\n+    \"https://cdn.staticfile.org/quill/1.3.4/quill.core.min.css\",\n+    \"https://cdn.staticfile.org/quill/1.3.4/quill.snow.min.css\",\n+    \"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\"\n+  ],\n+};\n+\n+function resolve(dir) {\n+  return path.join(__dirname, dir);\n+}\n+\n module.exports = {\n+  // 是否触发eslint检查\n+  lintOnSave: false,\n+  publicPath: \"/\",\n+  // 打包文件的出口\n+  outputDir: \"dist\",\n+  // 放置生成的css和js和img和fonts的目录\n+  assetsDir: \"static\",\n+  // 存放index.html模板的路径\n+  indexPath: \"static/index.html\",\n+  productionSourceMap: false,\n+  chainWebpack: (config) => {\n+    // 自定义打包入口\n+    config.when(process.env.NODE_ENV === \"production\", (config) => {\n+      config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n+      config.plugin(\"html\").tap((args) => {\n+        args[0].Prod = true;\n+        return args;\n+      });\n+    });\n+    config.when(process.env.NODE_ENV === \"development\", (config) => {\n+      config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n+      \n+    });\n+    // 配置cdn引入\n+    config.plugin(\"html\").tap((args) => {\n+      args[0].cdn = cdn;\n+      return args;\n+    });\n+\n+    // 移除prefetch插件，避免加载多余的资源\n+    config.plugins.delete(\"prefetch\");\n+\n+    // 定义文件夹的路径\n+    config.resolve.alias\n+      .set(\"@\", resolve(\"src\"))\n+      .set(\"assets\", resolve(\"src/assets\"))\n+      .set(\"components\", resolve(\"src/components\"))\n+      .set(\"router\", resolve(\"src/router\"))\n+      .set(\"store\", resolve(\"src/store\"))\n+      .set(\"views\", resolve(\"src/views\"));\n+\n+    // 压缩图片\n+    const imagesRule = config.module.rule(\"images\");\n+    imagesRule.uses.clear();\n+    imagesRule\n+      .use(\"file-loader\")\n+      .loader(\"url-loader\")\n+      .options({\n+        limit: 10240,\n+        fallback: {\n+          loader: \"file-loader\",\n+          options: {\n+            outputPath: \"static/images\",\n+          },\n+        },\n+      });\n+\n+    // 压缩响应的app.json返回的代码压缩\n+    config.optimization.minimize(true);\n+  },\n+  // webpack的配置\n+  configureWebpack: (config) => {\n+    // 忽略打包配置\n+    config.externals = cdn.externals;\n+    // 生产环境配置\n+    if (process.env.NODE_ENV === \"production\") {\n+      // 代码压缩去除console.log\n+      config.plugins.push(\n+        new TerserPlugin({\n+          terserOptions: {\n+            ecma: undefined,\n+            warnings: false,\n+            parse: {},\n+            compress: {\n+              drop_console: true,\n+              drop_debugger: false,\n+              pure_funcs: [\"console.log\"], // 移除console\n+            },\n+          },\n+        })\n+      );\n+    }\n+\n+    // 开启gzip压缩\n+    config.plugins.push(\n+      new CompressionWebpackPlugin({\n+        filename: (info) => {\n+          return `${info.path}.gz${info.query}`;\n+        },\n+        algorithm: \"gzip\",\n+        threshold: 10240, // 只有大小大于该值的资源会被处理 10240\n+        test: new RegExp(\"\\\\.(\" + [\"js\"].join(\"|\") + \")$\"),\n+        minRatio: 0.8, // 只有压缩率小于这个值的资源才会被处理\n+        deleteOriginalAssets: false, // 删除原文件\n+      })\n+    );\n+\n+    // 展示打包图形化信息\n+    // config.plugins.push(new BundleAnalyzer());\n+\n+    // 公共代码抽离\n+    config.optimization = {\n+      splitChunks: {\n+        cacheGroups: {\n+          vendor: {\n+            chunks: \"all\",\n+            test: /node_modules/,\n+            name: \"vendor\",\n+            minChunks: 1,\n+            maxInitialRequests: 5,\n+            minSize: 0,\n+            priority: 100,\n+          },\n+        },\n+      },\n+    };\n+  },\n+  css: {\n+    extract: true,\n+    sourceMap: false,\n+    loaderOptions: {\n+      // 定义全局scss无需引入即可使用\n+      sass: {\n+        prependData: `\n+          @import \"@/assets/css/variable.scss\";\n+          @import \"@/assets/css/common.scss\";\n+          @import \"@/assets/css/mixin.scss\";\n+        `,\n+      },\n+    },\n+  },\n+  // 需要gzip压缩的文件\n   devServer: {\n     host: \"localhost\",\n     port: 8080, // 端口号\n     open: false, // 配置自动启动浏览器\n+    before(app, server) {\n+      app.get(/.*.(js)$/, (req, res, next) => {\n+        req.url = req.url + \".gz\";\n+        res.set(\"Content-Encoding\", \"gzip\");\n+        next();\n+      });\n+    },\n     proxy: {\n       \"/hou\": {\n         target: `http://127.0.0.1:8888`,\n         logLevel: \"debug\", //运行时将本地发起的地址和对应指向的地址打印输出\n@@ -16,33 +221,5 @@\n         changeOrigin: true, //允许跨域\n       },\n     },\n   },\n-  chainWebpack: config => {\n-    config.when(process.env.NODE_ENV === 'production', config => {\n-      config.entry('app').clear().add('./src/main_prod.js')\n-\n-      config.set('externals', {\n-        vue: 'Vue',\n-        'vue-router': 'VueRouter',\n-        axios: 'axios',\n-        lodash: '_',\n-        echarts: 'echarts',\n-        nprogress: 'NProgress',\n-        'vue-quill-editor': 'VueQuillEditor'\n-      })\n-\n-      config.plugin('html').tap(args => {\n-        args[0].isProd = true\n-        return args\n-      })\n-    })\n-    config.when(process.env.NODE_ENV === 'development', config => {\n-      config.entry('app').clear().add('./src/main_dev.js')\n-\n-      config.plugin('html').tap(args => {\n-        args[0].isProd = false\n-        return args\n-      })\n-    })\n-  }\n-}\n+};\n"
                },
                {
                    "date": 1644759448598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,12 +89,12 @@\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n       \n     });\n     // 配置cdn引入\n-    config.plugin(\"html\").tap((args) => {\n-      args[0].cdn = cdn;\n-      return args;\n-    });\n+    // config.plugin(\"html\").tap((args) => {\n+    //   args[0].cdn = cdn;\n+    //   return args;\n+    // });\n \n     // 移除prefetch插件，避免加载多余的资源\n     config.plugins.delete(\"prefetch\");\n \n"
                },
                {
                    "date": 1644759459017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,12 +79,8 @@\n   chainWebpack: (config) => {\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n-      config.plugin(\"html\").tap((args) => {\n-        args[0].Prod = true;\n-        return args;\n-      });\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n       \n"
                },
                {
                    "date": 1644759474971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,8 @@\n   },\n   // webpack的配置\n   configureWebpack: (config) => {\n     // 忽略打包配置\n-    config.externals = cdn.externals;\n     // 生产环境配置\n     if (process.env.NODE_ENV === \"production\") {\n       // 代码压缩去除console.log\n       config.plugins.push(\n"
                },
                {
                    "date": 1644759481245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,8 +126,10 @@\n   configureWebpack: (config) => {\n     // 忽略打包配置\n     // 生产环境配置\n     if (process.env.NODE_ENV === \"production\") {\n+    config.externals = cdn.externals;\n+\n       // 代码压缩去除console.log\n       config.plugins.push(\n         new TerserPlugin({\n           terserOptions: {\n"
                },
                {
                    "date": 1644759531086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,12 @@\n   chainWebpack: (config) => {\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n+      config.plugin('html').tap(args => {\n+        args[0].isProd = true\n+        return args\n+      })\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n       \n"
                },
                {
                    "date": 1644759536631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,12 @@\n       })\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n-      \n+      config.plugin('html').tap(args => {\n+        args[0].isProd = true\n+        return args\n+      })\n     });\n     // 配置cdn引入\n     // config.plugin(\"html\").tap((args) => {\n     //   args[0].cdn = cdn;\n"
                },
                {
                    "date": 1644759764650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n       config.plugin('html').tap(args => {\n-        args[0].isProd = true\n+        args[0].isProd = false\n         return args\n       })\n     });\n     // 配置cdn引入\n@@ -133,9 +133,9 @@\n   configureWebpack: (config) => {\n     // 忽略打包配置\n     // 生产环境配置\n     if (process.env.NODE_ENV === \"production\") {\n-    config.externals = cdn.externals;\n+      config.externals = cdn.externals;\n \n       // 代码压缩去除console.log\n       config.plugins.push(\n         new TerserPlugin({\n"
                },
                {
                    "date": 1644759778021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,8 @@\n     config.optimization.minimize(true);\n   },\n   // webpack的配置\n   configureWebpack: (config) => {\n-    // 忽略打包配置\n     // 生产环境配置\n     if (process.env.NODE_ENV === \"production\") {\n       config.externals = cdn.externals;\n \n"
                },
                {
                    "date": 1644760097622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,12 +92,12 @@\n         return args\n       })\n     });\n     // 配置cdn引入\n-    // config.plugin(\"html\").tap((args) => {\n-    //   args[0].cdn = cdn;\n-    //   return args;\n-    // });\n+    config.plugin(\"html\").tap((args) => {\n+      args[0].cdn = cdn;\n+      return args;\n+    });\n \n     // 移除prefetch插件，避免加载多余的资源\n     config.plugins.delete(\"prefetch\");\n \n@@ -132,8 +132,9 @@\n   // webpack的配置\n   configureWebpack: (config) => {\n     // 生产环境配置\n     if (process.env.NODE_ENV === \"production\") {\n+    // 忽略打包配置\n       config.externals = cdn.externals;\n \n       // 代码压缩去除console.log\n       config.plugins.push(\n"
                },
                {
                    "date": 1644760135147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,19 +23,9 @@\n const BundleAnalyzer = require(\"webpack-bundle-analyzer\").BundleAnalyzerPlugin;\n \n const cdn = {\n   // 忽略打包的第三方库\n-  externals: {\n-    vue: \"Vue\",\n-    // vuex: \"Vuex\",\n-    \"vue-router\": \"VueRouter\",\n-    axios: \"axios\",\n-    //自己额外使用的第三方包\n-    lodash: \"_\",\n-    echarts: \"echarts\",\n-    nprogress: \"NProgress\",\n-    \"vue-quill-editor\":'VueQuillEditor'\n-  },\n+  \n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n     \"https://cdn.bootcss.com/vue-router/3.1.2/vue-router.min.js\",\n"
                },
                {
                    "date": 1644760163835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,9 +123,19 @@\n   configureWebpack: (config) => {\n     // 生产环境配置\n     if (process.env.NODE_ENV === \"production\") {\n     // 忽略打包配置\n-      config.externals = cdn.externals;\n+      config.externals = externals: {\n+        vue: \"Vue\",\n+        // vuex: \"Vuex\",\n+        \"vue-router\": \"VueRouter\",\n+        axios: \"axios\",\n+        //自己额外使用的第三方包\n+        lodash: \"_\",\n+        echarts: \"echarts\",\n+        nprogress: \"NProgress\",\n+        \"vue-quill-editor\":'VueQuillEditor'\n+      },;\n \n       // 代码压缩去除console.log\n       config.plugins.push(\n         new TerserPlugin({\n"
                },
                {
                    "date": 1644760176577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,8 @@\n // 图形化打包详情\n const BundleAnalyzer = require(\"webpack-bundle-analyzer\").BundleAnalyzerPlugin;\n \n const cdn = {\n-  // 忽略打包的第三方库\n-  \n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n     \"https://cdn.bootcss.com/vue-router/3.1.2/vue-router.min.js\",\n@@ -123,9 +121,9 @@\n   configureWebpack: (config) => {\n     // 生产环境配置\n     if (process.env.NODE_ENV === \"production\") {\n     // 忽略打包配置\n-      config.externals = externals: {\n+      config.externals =  {\n         vue: \"Vue\",\n         // vuex: \"Vuex\",\n         \"vue-router\": \"VueRouter\",\n         axios: \"axios\",\n"
                },
                {
                    "date": 1644760213490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n         lodash: \"_\",\n         echarts: \"echarts\",\n         nprogress: \"NProgress\",\n         \"vue-quill-editor\":'VueQuillEditor'\n-      },;\n+      }\n \n       // 代码压缩去除console.log\n       config.plugins.push(\n         new TerserPlugin({\n"
                },
                {
                    "date": 1644760389472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,8 +64,9 @@\n   // 存放index.html模板的路径\n   indexPath: \"static/index.html\",\n   productionSourceMap: false,\n   chainWebpack: (config) => {\n+    if()\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n       config.plugin('html').tap(args => {\n"
                },
                {
                    "date": 1644760400426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n \n function resolve(dir) {\n   return path.join(__dirname, dir);\n }\n-\n+const isProduction = process.env.NODE_ENV == \"production\";\n module.exports = {\n   // 是否触发eslint检查\n   lintOnSave: false,\n   publicPath: \"/\",\n"
                },
                {
                    "date": 1644760410766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n   // 存放index.html模板的路径\n   indexPath: \"static/index.html\",\n   productionSourceMap: false,\n   chainWebpack: (config) => {\n-    if()\n+    if(isProduction) \n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n       config.plugin('html').tap(args => {\n"
                },
                {
                    "date": 1644760419962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,16 +64,15 @@\n   // 存放index.html模板的路径\n   indexPath: \"static/index.html\",\n   productionSourceMap: false,\n   chainWebpack: (config) => {\n-    if(isProduction) \n+    if(isProduction) {\n+\n+    }\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n-      config.plugin('html').tap(args => {\n-        args[0].isProd = true\n-        return args\n-      })\n+      \n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n       config.plugin('html').tap(args => {\n"
                },
                {
                    "date": 1644760428051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,18 +74,11 @@\n       \n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n-      config.plugin('html').tap(args => {\n-        args[0].isProd = false\n-        return args\n-      })\n+      \n     });\n-    // 配置cdn引入\n-    config.plugin(\"html\").tap((args) => {\n-      args[0].cdn = cdn;\n-      return args;\n-    });\n+    \n \n     // 移除prefetch插件，避免加载多余的资源\n     config.plugins.delete(\"prefetch\");\n \n"
                },
                {
                    "date": 1644760434368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,17 +36,16 @@\n     \"https://cdn.bootcdn.net/ajax/libs/lodash.js/4.17.21/lodash.min.js\",\n     \"https://unpkg.com/element-ui/lib/index.js\",\n     \"https://cdn.staticfile.org/quill/1.3.4/quill.min.js\",\n     \"https://cdn.jsdelivr.net/npm/vue-quill-editor@3.0.4/dist/vue-quill-editor.js\",\n-\n   ],\n   css: [\n     // 第三方css\n     \"https://cdn.bootcdn.net/ajax/libs/nprogress/0.2.0/nprogress.min.css\",\n     \"https://unpkg.com/element-ui/lib/theme-chalk/index.css\",\n     \"https://cdn.staticfile.org/quill/1.3.4/quill.core.min.css\",\n     \"https://cdn.staticfile.org/quill/1.3.4/quill.snow.min.css\",\n-    \"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\"\n+    \"https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css\",\n   ],\n };\n \n function resolve(dir) {\n@@ -64,21 +63,22 @@\n   // 存放index.html模板的路径\n   indexPath: \"static/index.html\",\n   productionSourceMap: false,\n   chainWebpack: (config) => {\n-    if(isProduction) {\n-\n+    if (isProduction) {\n+      // 配置cdn引入\n+      config.plugin(\"html\").tap((args) => {\n+        args[0].cdn = cdn;\n+        return args;\n+      });\n     }\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n-      \n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n-      \n     });\n-    \n \n     // 移除prefetch插件，避免加载多余的资源\n     config.plugins.delete(\"prefetch\");\n \n@@ -113,20 +113,20 @@\n   // webpack的配置\n   configureWebpack: (config) => {\n     // 生产环境配置\n     if (process.env.NODE_ENV === \"production\") {\n-    // 忽略打包配置\n-      config.externals =  {\n+      // 忽略打包配置\n+      config.externals = {\n         vue: \"Vue\",\n         // vuex: \"Vuex\",\n         \"vue-router\": \"VueRouter\",\n         axios: \"axios\",\n         //自己额外使用的第三方包\n         lodash: \"_\",\n         echarts: \"echarts\",\n         nprogress: \"NProgress\",\n-        \"vue-quill-editor\":'VueQuillEditor'\n-      }\n+        \"vue-quill-editor\": \"VueQuillEditor\",\n+      };\n \n       // 代码压缩去除console.log\n       config.plugins.push(\n         new TerserPlugin({\n"
                },
                {
                    "date": 1644760442207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,9 @@\n     if (isProduction) {\n       // 配置cdn引入\n       config.plugin(\"html\").tap((args) => {\n         args[0].cdn = cdn;\n+        \n         return args;\n       });\n     }\n     // 自定义打包入口\n"
                },
                {
                    "date": 1644760452956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,10 @@\n     if (isProduction) {\n       // 配置cdn引入\n       config.plugin(\"html\").tap((args) => {\n         args[0].cdn = cdn;\n-        \n+        args[0].isProd = cdn;\n+\n         return args;\n       });\n     }\n     // 自定义打包入口\n"
                },
                {
                    "date": 1644760458328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n     if (isProduction) {\n       // 配置cdn引入\n       config.plugin(\"html\").tap((args) => {\n         args[0].cdn = cdn;\n-        args[0].isProd = cdn;\n+        args[0].isProd = true;\n \n         return args;\n       });\n     }\n"
                },
                {
                    "date": 1644760540784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n \n function resolve(dir) {\n   return path.join(__dirname, dir);\n }\n-const isProduction = process.env.NODE_ENV == \"production\";\n+const isProduction = process.env.NODE_ENV === \"production\";\n module.exports = {\n   // 是否触发eslint检查\n   lintOnSave: false,\n   publicPath: \"/\",\n"
                },
                {
                    "date": 1644760548703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,9 @@\n function resolve(dir) {\n   return path.join(__dirname, dir);\n }\n const isProduction = process.env.NODE_ENV === \"production\";\n+const isProduction = process.env.NODE_ENV === \"production\";\n module.exports = {\n   // 是否触发eslint检查\n   lintOnSave: false,\n   publicPath: \"/\",\n"
                },
                {
                    "date": 1644760570711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n function resolve(dir) {\n   return path.join(__dirname, dir);\n }\n const isProduction = process.env.NODE_ENV === \"production\";\n-const isProduction = process.env.NODE_ENV === \"production\";\n+const isdevelopment = process.env.NODE_ENV === \"production\";\n module.exports = {\n   // 是否触发eslint检查\n   lintOnSave: false,\n   publicPath: \"/\",\n"
                },
                {
                    "date": 1644760578114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n function resolve(dir) {\n   return path.join(__dirname, dir);\n }\n const isProduction = process.env.NODE_ENV === \"production\";\n-const isdevelopment = process.env.NODE_ENV === \"production\";\n+const isDevelopment = process.env.NODE_ENV === \"development\";\n module.exports = {\n   // 是否触发eslint检查\n   lintOnSave: false,\n   publicPath: \"/\",\n"
                },
                {
                    "date": 1644760585994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         return args;\n       });\n     }\n     // 自定义打包入口\n-    config.when(process.env.NODE_ENV === \"production\", (config) => {\n+    config.when(isProduction === \"production\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n"
                },
                {
                    "date": 1644760607427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         return args;\n       });\n     }\n     // 自定义打包入口\n-    config.when(isProduction === \"production\", (config) => {\n+    config.when(process.env.NODE_ENV === \"production\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n     });\n     config.when(process.env.NODE_ENV === \"development\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n"
                },
                {
                    "date": 1644760615669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,8 @@\n function resolve(dir) {\n   return path.join(__dirname, dir);\n }\n const isProduction = process.env.NODE_ENV === \"production\";\n-const isDevelopment = process.env.NODE_ENV === \"development\";\n module.exports = {\n   // 是否触发eslint检查\n   lintOnSave: false,\n   publicPath: \"/\",\n"
                },
                {
                    "date": 1644760634088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,9 @@\n function resolve(dir) {\n   return path.join(__dirname, dir);\n }\n const isProduction = process.env.NODE_ENV === \"production\";\n+const isDevelopment = process.env.NODE_ENV === \"development\";\n module.exports = {\n   // 是否触发eslint检查\n   lintOnSave: false,\n   publicPath: \"/\",\n"
                },
                {
                    "date": 1644760645603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n     // 自定义打包入口\n     config.when(process.env.NODE_ENV === \"production\", (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n     });\n-    config.when(process.env.NODE_ENV === \"development\", (config) => {\n+    config.when(isDevelopment, (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n     });\n \n     // 移除prefetch插件，避免加载多余的资源\n"
                },
                {
                    "date": 1644760657392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         return args;\n       });\n     }\n     // 自定义打包入口\n-    config.when(process.env.NODE_ENV === \"production\", (config) => {\n+    config.when(isProduction, (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_prod.js\");\n     });\n     config.when(isDevelopment, (config) => {\n       config.entry(\"app\").clear().add(\"./src/main_dev.js\");\n"
                },
                {
                    "date": 1644760665714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,8 @@\n     });\n \n     // 移除prefetch插件，避免加载多余的资源\n     config.plugins.delete(\"prefetch\");\n-\n     // 定义文件夹的路径\n     config.resolve.alias\n       .set(\"@\", resolve(\"src\"))\n       .set(\"assets\", resolve(\"src/assets\"))\n"
                },
                {
                    "date": 1644760727141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,20 @@\n // 图形化打包详情\n const BundleAnalyzer = require(\"webpack-bundle-analyzer\").BundleAnalyzerPlugin;\n \n const cdn = {\n+  // 忽略打包的第三方库\n+  externals: {\n+    vue: \"Vue\",\n+    // vuex: \"Vuex\",\n+    \"vue-router\": \"VueRouter\",\n+    axios: \"axios\",\n+    //自己额外使用的第三方包\n+    lodash: \"_\",\n+    echarts: \"echarts\",\n+    nprogress: \"NProgress\",\n+    \"vue-quill-editor\":'VueQuillEditor'\n+  },\n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n     \"https://cdn.bootcss.com/vue-router/3.1.2/vue-router.min.js\",\n"
                },
                {
                    "date": 1644760744576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,19 +128,9 @@\n   configureWebpack: (config) => {\n     // 生产环境配置\n     if (process.env.NODE_ENV === \"production\") {\n       // 忽略打包配置\n-      config.externals = {\n-        vue: \"Vue\",\n-        // vuex: \"Vuex\",\n-        \"vue-router\": \"VueRouter\",\n-        axios: \"axios\",\n-        //自己额外使用的第三方包\n-        lodash: \"_\",\n-        echarts: \"echarts\",\n-        nprogress: \"NProgress\",\n-        \"vue-quill-editor\": \"VueQuillEditor\",\n-      };\n+      config.externals = externals\n \n       // 代码压缩去除console.log\n       config.plugins.push(\n         new TerserPlugin({\n"
                },
                {
                    "date": 1644760798007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,8 @@\n       // 配置cdn引入\n       config.plugin(\"html\").tap((args) => {\n         args[0].cdn = cdn;\n         args[0].isProd = true;\n-\n         return args;\n       });\n     }\n     // 自定义打包入口\n@@ -128,9 +127,9 @@\n   configureWebpack: (config) => {\n     // 生产环境配置\n     if (process.env.NODE_ENV === \"production\") {\n       // 忽略打包配置\n-      config.externals = externals\n+      config.externals = cdn.externals\n \n       // 代码压缩去除console.log\n       config.plugins.push(\n         new TerserPlugin({\n"
                },
                {
                    "date": 1644760900029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,8 +102,9 @@\n       .set(\"components\", resolve(\"src/components\"))\n       .set(\"router\", resolve(\"src/router\"))\n       .set(\"store\", resolve(\"src/store\"))\n       .set(\"views\", resolve(\"src/views\"));\n+      .set(\"views\", resolve(\"src/views\"));\n \n     // 压缩图片\n     const imagesRule = config.module.rule(\"images\");\n     imagesRule.uses.clear();\n"
                },
                {
                    "date": 1644760911740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,10 +101,10 @@\n       .set(\"assets\", resolve(\"src/assets\"))\n       .set(\"components\", resolve(\"src/components\"))\n       .set(\"router\", resolve(\"src/router\"))\n       .set(\"store\", resolve(\"src/store\"))\n-      .set(\"views\", resolve(\"src/views\"));\n-      .set(\"views\", resolve(\"src/views\"));\n+      .set(\"views\", resolve(\"src/views\"))\n+      .set(\"api\", resolve(\"src/api\"));\n \n     // 压缩图片\n     const imagesRule = config.module.rule(\"images\");\n     imagesRule.uses.clear();\n"
                },
                {
                    "date": 1644763033738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n   publicPath: \"/\",\n   // 打包文件的出口\n   outputDir: \"dist\",\n   // 放置生成的css和js和img和fonts的目录\n-  assetsDir: \"static\",\n+  assetsDir: \"di\",\n   // 存放index.html模板的路径\n   indexPath: \"static/index.html\",\n   productionSourceMap: false,\n   chainWebpack: (config) => {\n"
                },
                {
                    "date": 1644763047852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n   publicPath: \"/\",\n   // 打包文件的出口\n   outputDir: \"dist\",\n   // 放置生成的css和js和img和fonts的目录\n-  assetsDir: \"di\",\n+  assetsDir: \"dist\",\n   // 存放index.html模板的路径\n   indexPath: \"static/index.html\",\n   productionSourceMap: false,\n   chainWebpack: (config) => {\n"
                },
                {
                    "date": 1644763131786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,11 +71,11 @@\n   publicPath: \"/\",\n   // 打包文件的出口\n   outputDir: \"dist\",\n   // 放置生成的css和js和img和fonts的目录\n-  assetsDir: \"dist\",\n+  assetsDir: \"/\",\n   // 存放index.html模板的路径\n-  indexPath: \"static/index.html\",\n+  indexPath: \"dist/index.html\",\n   productionSourceMap: false,\n   chainWebpack: (config) => {\n     if (isProduction) {\n       // 配置cdn引入\n"
                },
                {
                    "date": 1644763141730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n   outputDir: \"dist\",\n   // 放置生成的css和js和img和fonts的目录\n   assetsDir: \"/\",\n   // 存放index.html模板的路径\n-  indexPath: \"dist/index.html\",\n+  indexPath: \"index.html\",\n   productionSourceMap: false,\n   chainWebpack: (config) => {\n     if (isProduction) {\n       // 配置cdn引入\n"
                },
                {
                    "date": 1644763167355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n   publicPath: \"/\",\n   // 打包文件的出口\n   outputDir: \"dist\",\n   // 放置生成的css和js和img和fonts的目录\n-  assetsDir: \"/\",\n+  assetsDir: \"\",\n   // 存放index.html模板的路径\n   indexPath: \"index.html\",\n   productionSourceMap: false,\n   chainWebpack: (config) => {\n"
                },
                {
                    "date": 1644763351318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,10 @@\n     //自己额外使用的第三方包\n     lodash: \"_\",\n     echarts: \"echarts\",\n     nprogress: \"NProgress\",\n-    \"vue-quill-editor\":'VueQuillEditor'\n+    \"vue-quill-editor\":'VueQuillEditor',\n+    \n   },\n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n"
                },
                {
                    "date": 1644763369127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,10 @@\n     lodash: \"_\",\n     echarts: \"echarts\",\n     nprogress: \"NProgress\",\n     \"vue-quill-editor\":'VueQuillEditor',\n-    \n+\n+    \"\n   },\n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n"
                },
                {
                    "date": 1644763375158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,10 +33,9 @@\n     lodash: \"_\",\n     echarts: \"echarts\",\n     nprogress: \"NProgress\",\n     \"vue-quill-editor\":'VueQuillEditor',\n-\n-    \"\n+    \"element-ui\":\"\"\n   },\n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n"
                },
                {
                    "date": 1644763382154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     lodash: \"_\",\n     echarts: \"echarts\",\n     nprogress: \"NProgress\",\n     \"vue-quill-editor\":'VueQuillEditor',\n-    \"element-ui\":\"\"\n+    \"element-ui\":\"ElementUI\"\n   },\n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n"
                },
                {
                    "date": 1644763709552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     lodash: \"_\",\n     echarts: \"echarts\",\n     nprogress: \"NProgress\",\n     \"vue-quill-editor\":'VueQuillEditor',\n-    \"element-ui\":\"ElementUI\"\n+    \"element-ui\":\"ELEMENT\"\n   },\n   // 通过cdn方式使用\n   js: [\n     \"https://cdn.bootcss.com/vue/2.6.11/vue.runtime.min.js\",\n"
                }
            ],
            "date": 1644738327948,
            "name": "Commit-0",
            "content": "module.exports ={\n  \n}"
        }
    ]
}